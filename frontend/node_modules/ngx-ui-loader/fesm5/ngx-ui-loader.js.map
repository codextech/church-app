{"version":3,"file":"ngx-ui-loader.js.map","sources":["ng://ngx-ui-loader/lib/core/ngx-ui-loader.enums.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.contants.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-config.token.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.service.ts","ng://ngx-ui-loader/lib/core/coercion.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.component.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-blurred.directive.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.module.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router-config.token.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.constants.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.module.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http-config.token.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.constants.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.interceptor.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.module.ts"],"sourcesContent":["/**\n * Available spinner types\n */\nexport enum SPINNER {\n  ballScaleMultiple = 'ball-scale-multiple',\n  ballSpin = 'ball-spin',\n  ballSpinClockwise = 'ball-spin-clockwise',\n  ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating',\n  ballSpinFadeRotating = 'ball-spin-fade-rotating',\n  chasingDots = 'chasing-dots',\n  circle = 'circle',\n  cubeGrid = 'cube-grid',\n  doubleBounce = 'double-bounce',\n  fadingCircle = 'fading-circle',\n  foldingCube = 'folding-cube',\n  pulse = 'pulse',\n  rectangleBounce = 'rectangle-bounce',\n  rectangleBounceParty = 'rectangle-bounce-party',\n  rectangleBouncePulseOut = 'rectangle-bounce-pulse-out',\n  rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid',\n  rotatingPlane = 'rotating-plane',\n  squareJellyBox = 'square-jelly-box',\n  squareLoader = 'square-loader',\n  threeBounce = 'three-bounce',\n  threeStrings = 'three-strings',\n  wanderingCubes = 'wandering-cubes',\n}\n\n/**\n * Available postions\n */\nexport enum POSITION {\n  bottomCenter = 'bottom-center',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  centerCenter = 'center-center',\n  centerLeft = 'center-left',\n  centerRight = 'center-right',\n  topCenter = 'top-center',\n  topLeft = 'top-left',\n  topRight = 'top-right'\n}\n\n/**\n * Progress bar directions\n */\nexport enum PB_DIRECTION {\n  leftToRight = 'ltr',\n  rightToLeft = 'rtl'\n}\n","import { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\n\n/**\n * The default value of task id\n */\nexport const DEFAULT_TASK_ID = 'default';\n\n/**\n * The default value of loader id\n */\nexport const DEFAULT_MASTER_LOADER_ID = 'master';\n\nexport const CLOSING_TIME = 1001;\n\nexport const WAITING_FOR_OVERLAY_DISAPPEAR = 500;\n\n/**\n * The configuration of spinners\n */\nexport const SPINNER_CONFIG = {\n  'ball-scale-multiple': {\n    divs: 3,\n    class: 'sk-ball-scale-multiple'\n  },\n  'ball-spin': {\n    divs: 8,\n    class: 'sk-ball-spin'\n  },\n  'ball-spin-clockwise': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise'\n  },\n  'ball-spin-clockwise-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise-fade-rotating'\n  },\n  'ball-spin-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-fade-rotating'\n  },\n  'chasing-dots': {\n    divs: 2,\n    class: 'sk-chasing-dots'\n  },\n  'circle': {\n    divs: 12,\n    class: 'sk-circle'\n  },\n  'cube-grid': {\n    divs: 9,\n    class: 'sk-cube-grid'\n  },\n  'double-bounce': {\n    divs: 2,\n    class: 'sk-double-bounce'\n  },\n  'fading-circle': {\n    divs: 12,\n    class: 'sk-fading-circle'\n  },\n  'folding-cube': {\n    divs: 4,\n    class: 'sk-folding-cube'\n  },\n  'pulse':  {\n    divs: 1,\n    class: 'sk-pulse'\n  },\n  'rectangle-bounce': {\n    divs: 5,\n    class: 'sk-rectangle-bounce'\n  },\n  'rectangle-bounce-party': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-party'\n  },\n  'rectangle-bounce-pulse-out': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out'\n  },\n  'rectangle-bounce-pulse-out-rapid': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out-rapid'\n  },\n  'rotating-plane': {\n    divs: 1,\n    class: 'sk-rotating-plane'\n  },\n  'square-jelly-box': {\n    divs: 2,\n    class: 'sk-square-jelly-box'\n  },\n  'square-loader': {\n    divs: 1,\n    class: 'sk-square-loader'\n  },\n  'three-bounce': {\n    divs: 3,\n    class: 'sk-three-bounce'\n  },\n  'three-strings': {\n    divs: 3,\n    class: 'sk-three-strings'\n  },\n  'wandering-cubes': {\n    divs: 2,\n    class: 'sk-wandering-cubes'\n  },\n};\n\n/**\n * The default configuration of ngx-ui-loader\n */\nexport const DEFAULT_CONFIG: NgxUiLoaderConfig = {\n  bgsColor: '#00ACC1',\n  bgsOpacity: 0.5,\n  bgsPosition: POSITION.bottomRight,\n  bgsSize: 60,\n  bgsType: SPINNER.ballSpinClockwise,\n  blur: 5,\n  fgsColor: '#00ACC1',\n  fgsPosition: POSITION.centerCenter,\n  fgsSize: 60,\n  fgsType: SPINNER.ballSpinClockwise,\n  gap: 24,\n  logoPosition: POSITION.centerCenter,\n  logoSize: 120,\n  logoUrl: '',\n  masterLoaderId: DEFAULT_MASTER_LOADER_ID,\n  overlayBorderRadius: '0',\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\n  pbColor: '#00ACC1',\n  pbDirection: PB_DIRECTION.leftToRight,\n  pbThickness: 3,\n  hasProgressBar: true,\n  text: '',\n  textColor: '#FFFFFF',\n  textPosition: POSITION.centerCenter,\n  threshold: 500\n};\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\n\n/**\n * Injection token for ngx-ui-loader configuration\n */\nexport const NGX_UI_LOADER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderConfig>('ngxUiLoaderCustom.config');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { CLOSING_TIME, DEFAULT_TASK_ID, DEFAULT_CONFIG, WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { Loaders, Loader, ShowEvent, Task } from './ngx-ui-loader.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxUiLoaderService {\n\n  // Public properties\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  backgroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  foregroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  showBackground$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  showForeground$: Observable<ShowEvent>;\n\n  // Private properties\n  private bgClosing: BehaviorSubject<ShowEvent>;\n  private defaultConfig: NgxUiLoaderConfig;\n  private fgClosing: BehaviorSubject<ShowEvent>;\n  private loaders: Loaders;\n  private showBackground: BehaviorSubject<ShowEvent>;\n  private showForeground: BehaviorSubject<ShowEvent>;\n\n  /**\n   * Constructor\n   * @param config\n   */\n  constructor(@Optional() @Inject(NGX_UI_LOADER_CONFIG_TOKEN) private config: NgxUiLoaderConfig) {\n\n    this.defaultConfig = { ...DEFAULT_CONFIG };\n\n    if (this.config) {\n      if (this.config.threshold && this.config.threshold <= 0) {\n        this.config.threshold = DEFAULT_CONFIG.threshold;\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...this.config };\n    }\n\n    this.loaders = {};\n    this.showForeground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showForeground$ = this.showForeground.asObservable();\n    this.showBackground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showBackground$ = this.showBackground.asObservable();\n    this.fgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.foregroundClosing$ = this.fgClosing.asObservable();\n    this.bgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.backgroundClosing$ = this.bgClosing.asObservable();\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  initLoaderData(loaderId: string): void {\n    let isMaster = false;\n    if (loaderId === this.defaultConfig.masterLoaderId) {\n      this.throwErrorIfMasterLoaderExists(true);\n      isMaster = true;\n    } else { // not master loader\n      this.throwErrorIfLoaderExists(loaderId, true);\n    }\n    if (this.loaders[loaderId]) {\n      this.loaders[loaderId].isBound = true;\n      this.loaders[loaderId].isMaster = isMaster;\n      // emit showEvent after data loader is bound\n      if (this.hasForeground(loaderId)) {\n        this.showForeground.next({ loaderId, isShow: true });\n      } else {\n        if (this.hasBackground(loaderId)) {\n          this.showBackground.next({ loaderId, isShow: true });\n        }\n      }\n    } else {\n      this.createLoaderData(loaderId, isMaster, true);\n    }\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  updateLoaderId(loaderId: string, newLoaderId: string): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n    if (this.loaders[loaderId].loaderId === this.defaultConfig.masterLoaderId) {\n      console.warn(`[ngx-ui-loader] - Cannot change loaderId of master loader. The current ` +\n        `master's loaderId is \"${this.defaultConfig.masterLoaderId}\". If you really want to ` +\n        `change it, please use NgxUiLoaderModule.forRoot() method.`);\n      return;\n    }\n    if (newLoaderId !== loaderId) {\n      this.throwErrorIfLoaderExists(newLoaderId, true);\n      this.loaders[newLoaderId] = {\n        loaderId: newLoaderId,\n        background: { ...this.loaders[loaderId].background },\n        foreground: { ...this.loaders[loaderId].foreground },\n        isMaster: false,\n        isBound: this.loaders[loaderId].isBound\n      };\n      delete this.loaders[loaderId];\n    }\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  destroyLoaderData(loaderId: string): void {\n    this.stopLoaderAll(loaderId);\n    delete this.loaders[loaderId];\n  }\n\n  /**\n   * Get default loader configuration\n   * @returns default configuration object\n   */\n  getDefaultConfig(): NgxUiLoaderConfig {\n    return { ...this.defaultConfig };\n  }\n\n  /**\n   * Get all the loaders\n   */\n  getLoaders(): Loaders {\n    return JSON.parse(JSON.stringify(this.loaders));\n  }\n\n  /**\n   * Get data of a specified loader. If loaderId is not provided, it will return data of master loader(if existed)\n   */\n  getLoader(loaderId?: string): Loader {\n    if (loaderId) {\n      this.throwErrorIfLoaderNotExist(loaderId);\n    } else {\n      this.throwErrorIfMasterLoaderNotExist();\n      loaderId = this.defaultConfig.masterLoaderId;\n    }\n    return JSON.parse(JSON.stringify(this.loaders[loaderId]));\n  }\n\n  /**\n   * @deprecated use getLoader() or getLoaders() instead. This will be removed in the version 8.x.x\n   * Return status of master loader\n   */\n  getStatus(): { waitingBackground: Task, waitingForeground: Task } {\n    this.throwErrorIfMasterLoaderNotExist();\n    return {\n      waitingBackground: this.loaders[this.defaultConfig.masterLoaderId].background,\n      waitingForeground: this.loaders[this.defaultConfig.masterLoaderId].foreground\n    };\n  }\n\n  /**\n   * Check whether the queue has a waiting foreground loader with the given `taskId`.\n   * If no `taskId` specified, it will check whether the queue has any waiting foreground loader.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasForeground(loaderId: string, taskId?: string): boolean {\n    if (this.loaders[loaderId]) {\n      if (taskId) {\n        return this.loaders[loaderId].foreground[taskId] ? true : false;\n      }\n      return Object.keys(this.loaders[loaderId].foreground).length > 0;\n    }\n    return false;\n  }\n\n  /**\n   * Check whether the queue has a waiting background loader with the given `taskId`.\n   * If no `taskId` specified, it will check whether the queue has any waiting background loader.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasBackground(loaderId: string, taskId?: string): boolean {\n    if (this.loaders[loaderId]) {\n      if (taskId) {\n        return this.loaders[loaderId].background[taskId] ? true : false;\n      }\n      return Object.keys(this.loaders[loaderId].background).length > 0;\n    }\n    return false;\n  }\n\n  /**\n   * Start the foreground loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoader() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.createLoaderData(loaderId, undefined, false);\n\n    const foregroundRunning = this.hasForeground(loaderId);\n    this.loaders[loaderId].foreground[taskId] = Date.now();\n\n    if (!this.loaders[loaderId].isBound) {\n      return;\n    }\n\n    if (!foregroundRunning) {\n      if (this.hasBackground(loaderId)) {\n        this.backgroundCloseout(loaderId);\n        this.showBackground.next({ loaderId, isShow: false });\n      }\n      this.showForeground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the foreground loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stop() method.\n   * NOTE: Really this function just wraps startLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  start(taskId: string = DEFAULT_TASK_ID): void {\n    this.startLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Start the background loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoaderBackground() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.createLoaderData(loaderId, undefined, false);\n\n    this.loaders[loaderId].background[taskId] = Date.now();\n\n    if (!this.loaders[loaderId].isBound) {\n      return;\n    }\n\n    if (!this.hasForeground(loaderId)) {\n      this.showBackground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the background loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopBackground() method.\n   * NOTE: Really this function just wraps startBackgroundLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startBackground(taskId: string = DEFAULT_TASK_ID): void {\n    this.startBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a foreground loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    // Update loader data {{{\n    const now = Date.now();\n    if (this.hasForeground(loaderId, taskId)) {\n      if (this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold > now) {\n        setTimeout(() => {\n          this.stopLoader(loaderId, taskId);\n        }, this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold - now);\n        return;\n      }\n      delete this.loaders[loaderId].foreground[taskId];\n    } else {\n      return;\n    }\n    // }}}\n\n    // Emit ShowEvents to update view {{{\n    if (!this.hasForeground(loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n      if (this.hasBackground(loaderId)) {\n        setTimeout(() => {\n          if (this.hasBackground(loaderId)) { // still have background tasks\n            this.showBackground.next({ loaderId, isShow: true });\n          }\n        }, WAITING_FOR_OVERLAY_DISAPPEAR);\n      }\n    }\n    // }}}\n  }\n\n  /**\n   * Stop a foreground loading of master loader with specific `taskId`\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stop(taskId: string = DEFAULT_TASK_ID): void {\n    this.stopLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a background loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    // Update loader data {{{\n    const now = Date.now();\n    if (this.hasBackground(loaderId, taskId)) {\n      if (this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold > now) {\n        setTimeout(() => {\n          this.stopBackgroundLoader(loaderId, taskId);\n        }, this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold - now);\n        return;\n      }\n      delete this.loaders[loaderId].background[taskId];\n    } else {\n      return;\n    }\n    // }}}\n\n    // Emit ShowEvents to update view {{{\n    if (!this.hasForeground(loaderId) && !this.hasBackground(loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    // }}}\n  }\n\n  /**\n   * Stop a background loading of master loader with specific taskId\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopBackground(taskId: string = DEFAULT_TASK_ID): void {\n    this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop all the background and foreground loadings of loader having `loaderId`\n   * @param loaderId the loader Id\n   */\n  stopLoaderAll(loaderId: string): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    if (this.hasForeground(loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n    } else if (this.hasBackground(loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    this.loaders[loaderId].foreground = {};\n    this.loaders[loaderId].background = {};\n  }\n\n  /**\n   * Stop all the background and foreground loadings of master loader\n   */\n  stopAll(): void {\n    this.stopLoaderAll(this.defaultConfig.masterLoaderId);\n  }\n\n  /**\n   * Create loader data if it does not exist\n   * @param loaderId\n   * @param isMaster\n   * @param isBound\n   * @docs-private\n   */\n  private createLoaderData(loaderId: string, isMaster: boolean, isBound: boolean): void {\n    if (!this.loaders[loaderId]) {\n      this.loaders[loaderId] = {\n        loaderId,\n        foreground: {},\n        background: {},\n        isMaster,\n        isBound\n      };\n    }\n  }\n\n  /**\n   * Throw error if the loaderId does not exist.\n   * @docs-private\n   */\n  private throwErrorIfLoaderNotExist(loaderId: string): void {\n    if (!this.loaders[loaderId]) {\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\n    }\n  }\n\n  /**\n   * Throw error if the loaderId has already existed.\n   * @docs-private\n   */\n  private throwErrorIfLoaderExists(loaderId: string, useIsBoundProp?: boolean): void {\n    if (this.loaders[loaderId] && (this.loaders[loaderId].isBound && useIsBoundProp)) {\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" is duplicated. Please choose another one!`);\n    }\n  }\n\n  /**\n   * Throw error if the master loader has already existed.\n   * @docs-private\n   */\n  private throwErrorIfMasterLoaderExists(useIsBoundProp?: boolean): void {\n    if (this.loaders[this.defaultConfig.masterLoaderId] && (this.loaders[this.defaultConfig.masterLoaderId].isBound && useIsBoundProp)) {\n      throw new Error(`[ngx-ui-loader] - The master loader has already existed. `\n        + `The app should have only one master loader and it should be placed in the root app template`);\n    }\n  }\n\n  /**\n   * Throw error if the master loader does not exist.\n   * @docs-private\n   */\n  private throwErrorIfMasterLoaderNotExist(): void {\n    if (!this.loaders[this.defaultConfig.masterLoaderId]) {\n      throw new Error(`[ngx-ui-loader] - The master loader does not exist.`);\n    }\n  }\n\n  /**\n   * Manage to close foreground loading\n   * @param loaderId the loader id\n   */\n  private foregroundCloseout(loaderId: string): void {\n    this.fgClosing.next({ loaderId, isShow: true });\n    setTimeout(() => {\n      this.fgClosing.next({ loaderId, isShow: false });\n    }, CLOSING_TIME);\n  }\n\n  /**\n   * Manage to close background loading\n   * @param loaderId the loader id\n   */\n  private backgroundCloseout(loaderId: string): void {\n    this.bgClosing.next({ loaderId, isShow: true });\n    setTimeout(() => {\n      this.bgClosing.next({ loaderId, isShow: false });\n    }, CLOSING_TIME);\n  }\n}\n","/**\n * Coerce a value (string) to a number\n * @param value\n * @param fallbackValue\n */\nexport function coerceNumber(value, fallbackValue): number {\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, SimpleChange,\n  OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { DirectionType, PositionType, SpinnerType } from './ngx-ui-loader.types';\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\nimport { SPINNER_CONFIG } from './ngx-ui-loader.contants';\nimport { ShowEvent } from './ngx-ui-loader.interfaces';\nimport { coerceNumber } from './coercion';\n\n@Component({\n  selector: 'ngx-ui-loader',\n  templateUrl: './ngx-ui-loader.component.html',\n  styleUrls: ['./ngx-ui-loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxUiLoaderComponent implements OnChanges, OnDestroy, OnInit {\n\n  @Input() bgsColor: string;\n  @Input() bgsOpacity: number;\n  @Input() bgsPosition: PositionType;\n  @Input() bgsSize: number;\n  @Input() bgsType: SpinnerType;\n  @Input() fgsColor: string;\n  @Input() fgsPosition: PositionType;\n  @Input() fgsSize: number;\n  @Input() fgsType: SpinnerType;\n  @Input() gap: number;\n  @Input() loaderId: string;\n  @Input() logoPosition: PositionType;\n  @Input() logoSize: number;\n  @Input() logoUrl: string;\n  @Input() overlayBorderRadius: string;\n  @Input() overlayColor: string;\n  @Input() pbColor: string;\n  @Input() pbDirection: DirectionType;\n  @Input() pbThickness: number;\n  @Input() hasProgressBar: boolean;\n  @Input() text: string;\n  @Input() textColor: string;\n  @Input() textPosition: PositionType;\n\n  fgDivs: number[];\n  fgSpinnerClass: string;\n  bgDivs: number[];\n  bgSpinnerClass: string;\n  showForeground: boolean;\n  showBackground: boolean;\n  foregroundClosing: boolean;\n  backgroundClosing: boolean;\n\n  trustedLogoUrl: SafeResourceUrl;\n  logoTop: SafeStyle;\n  spinnerTop: SafeStyle;\n  textTop: SafeStyle;\n\n  showForegroundWatcher: Subscription;\n  showBackgroundWatcher: Subscription;\n  foregroundClosingWatcher: Subscription;\n  backgroundClosingWatcher: Subscription;\n\n  defaultConfig: NgxUiLoaderConfig;\n  initialized: boolean;\n\n  /**\n   * Constructor\n   * @param domSanitizer\n   * @param ngxService\n   */\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngxService: NgxUiLoaderService) {\n\n    this.initialized = false;\n    this.defaultConfig = this.ngxService.getDefaultConfig();\n\n    this.bgsColor = this.defaultConfig.bgsColor;\n    this.bgsOpacity = this.defaultConfig.bgsOpacity;\n    this.bgsPosition = this.defaultConfig.bgsPosition;\n    this.bgsSize = this.defaultConfig.bgsSize;\n    this.bgsType = this.defaultConfig.bgsType;\n    this.fgsColor = this.defaultConfig.fgsColor;\n    this.fgsPosition = this.defaultConfig.fgsPosition;\n    this.fgsSize = this.defaultConfig.fgsSize;\n    this.fgsType = this.defaultConfig.fgsType;\n    this.gap = this.defaultConfig.gap;\n    this.loaderId = this.defaultConfig.masterLoaderId;\n    this.logoPosition = this.defaultConfig.logoPosition;\n    this.logoSize = this.defaultConfig.logoSize;\n    this.logoUrl = this.defaultConfig.logoUrl;\n    this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius;\n    this.overlayColor = this.defaultConfig.overlayColor;\n    this.pbColor = this.defaultConfig.pbColor;\n    this.pbDirection = this.defaultConfig.pbDirection;\n    this.pbThickness = this.defaultConfig.pbThickness;\n    this.hasProgressBar = this.defaultConfig.hasProgressBar;\n    this.text = this.defaultConfig.text;\n    this.textColor = this.defaultConfig.textColor;\n    this.textPosition = this.defaultConfig.textPosition;\n  }\n\n  /**\n   * On init event\n   */\n  ngOnInit() {\n    this.initializeSpinners();\n    this.ngxService.initLoaderData(this.loaderId);\n    this.determinePositions();\n\n    this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\n\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n\n    this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\n\n    this.showForegroundWatcher = this.ngxService.showForeground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.showForeground = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.showBackgroundWatcher = this.ngxService.showBackground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.showBackground = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.foregroundClosingWatcher = this.ngxService.foregroundClosing$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.foregroundClosing = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.backgroundClosingWatcher = this.ngxService.backgroundClosing$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.backgroundClosing = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n    this.initialized = true;\n  }\n\n  /**\n   * On changes event\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.initialized) {\n      return;\n    }\n\n    const bgsTypeChange: SimpleChange = changes.bgsType;\n    const bgsPositionChange: SimpleChange = changes.bgsPosition;\n    const fgsTypeChange: SimpleChange = changes.fgsType;\n    const loaderIdChange: SimpleChange = changes.loaderId;\n    const logoUrlChange: SimpleChange = changes.logoUrl;\n    const pbDirectionChange: SimpleChange = changes.pbDirection;\n\n    if (fgsTypeChange || bgsTypeChange) {\n      this.initializeSpinners();\n    }\n\n    if (loaderIdChange) {\n      this.ngxService.updateLoaderId(loaderIdChange.previousValue, this.loaderId);\n    }\n\n    this.determinePositions();\n\n    if (bgsPositionChange) {\n      this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\n    }\n\n    if (logoUrlChange) {\n      this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n    }\n\n    if (pbDirectionChange) {\n      this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\n    }\n  }\n\n  /**\n   * Initialize spinners\n   */\n  private initializeSpinners(): void {\n    this.fgsType = <SpinnerType>this.validate('fgsType', this.fgsType, SPINNER, this.defaultConfig.fgsType);\n    this.bgsType = <SpinnerType>this.validate('bgsType', this.bgsType, SPINNER, this.defaultConfig.bgsType);\n\n    this.fgDivs = Array(SPINNER_CONFIG[this.fgsType].divs).fill(1);\n    this.fgSpinnerClass = SPINNER_CONFIG[this.fgsType].class;\n    this.bgDivs = Array(SPINNER_CONFIG[this.bgsType].divs).fill(1);\n    this.bgSpinnerClass = SPINNER_CONFIG[this.bgsType].class;\n  }\n\n  /**\n   * Determine the positions of spinner, logo and text\n   */\n  private determinePositions(): void {\n    this.fgsPosition = <PositionType>this.validate('fgsPosition', this.fgsPosition, POSITION, this.defaultConfig.fgsPosition);\n    this.logoPosition = <PositionType>this.validate('logoPosition', this.logoPosition, POSITION, this.defaultConfig.logoPosition);\n    this.textPosition = <PositionType>this.validate('textPosition', this.textPosition, POSITION, this.defaultConfig.textPosition);\n    this.gap = coerceNumber(this.gap, this.defaultConfig.gap);\n\n    this.logoTop = 'initial';\n    this.spinnerTop = 'initial';\n    this.textTop = 'initial';\n    const textSize = 24;\n\n    if (this.logoPosition.startsWith('center')) {\n      this.logoTop = '50%';\n    } else if (this.logoPosition.startsWith('top')) {\n      this.logoTop = '30px';\n    }\n\n    if (this.fgsPosition.startsWith('center')) {\n      this.spinnerTop = '50%';\n    } else if (this.fgsPosition.startsWith('top')) {\n      this.spinnerTop = '30px';\n    }\n\n    if (this.textPosition.startsWith('center')) {\n      this.textTop = '50%';\n    } else if (this.textPosition.startsWith('top')) {\n      this.textTop = '30px';\n    }\n\n    if (this.fgsPosition === POSITION.centerCenter) {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter) {\n        if (this.text && this.textPosition === POSITION.centerCenter) { // logo, spinner and text\n          this.logoTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${textSize / 2}px - ${this.gap}px)`);\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px - ${textSize / 2}px)`);\n          this.textTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${this.fgsSize / 2}px)`);\n        } else { // logo and spinner\n          this.logoTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`);\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n        }\n      } else {\n        if (this.text && this.textPosition === POSITION.centerCenter) { // spinner and text\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n          this.textTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`);\n        }\n      }\n    } else {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter\n        && this.text && this.textPosition === POSITION.centerCenter) { // logo and text\n        this.logoTop = this.domSanitizer\n          .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n        this.textTop = this.domSanitizer\n          .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n      }\n    }\n  }\n\n  private validate(inputName: string, value: string, validTypeObj: {}, fallbackValue: string): string {\n    if (Object.keys(validTypeObj).map(k => validTypeObj[k]).findIndex(v => v === value) === -1) {\n      console.error(`[ngx-ui-loader] - ${inputName} (\"${value}\") is invalid. `\n        + `Default value \"${fallbackValue}\" is used.`);\n      return fallbackValue;\n    }\n    return value;\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    this.ngxService.destroyLoaderData(this.loaderId);\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n    if (this.showBackgroundWatcher) {\n      this.showBackgroundWatcher.unsubscribe();\n    }\n    if (this.foregroundClosingWatcher) {\n      this.foregroundClosingWatcher.unsubscribe();\n    }\n    if (this.backgroundClosingWatcher) {\n      this.backgroundClosingWatcher.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { coerceNumber } from './coercion';\nimport { ShowEvent } from './ngx-ui-loader.interfaces';\nimport { WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\n\n@Directive({ selector: '[ngxUiLoaderBlurred]' })\nexport class NgxUiLoaderBlurredDirective implements OnInit, OnDestroy {\n\n  private blurNumber: number;\n\n  @Input()\n  get blur(): number {\n    return this.blurNumber;\n  }\n\n  set blur(value: number) {\n    this.blurNumber = coerceNumber(value, this.ngxUiLoaderService.getDefaultConfig().blur);\n  }\n\n  @Input() loaderId: string;\n\n  showForegroundWatcher: Subscription;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private ngxUiLoaderService: NgxUiLoaderService\n  ) {\n    this.blurNumber = this.ngxUiLoaderService.getDefaultConfig().blur;\n    this.loaderId = this.ngxUiLoaderService.getDefaultConfig().masterLoaderId;\n  }\n\n  /**\n   * On Init event\n   */\n  ngOnInit() {\n    this.showForegroundWatcher = this.ngxUiLoaderService.showForeground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        if (data.isShow) {\n          const filterValue = `blur(${this.blurNumber}px)`;\n          this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', filterValue);\n          this.renderer.setStyle(this.elementRef.nativeElement, 'filter', filterValue);\n        } else {\n          setTimeout(() => {\n            if (!this.ngxUiLoaderService.hasForeground(data.loaderId)) {\n              this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', 'none');\n              this.renderer.setStyle(this.elementRef.nativeElement, 'filter', 'none');\n            }\n          }, WAITING_FOR_OVERLAY_DISAPPEAR);\n        }\n      });\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxUiLoaderComponent } from './ngx-ui-loader.component';\nimport { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    NgxUiLoaderComponent,\n    NgxUiLoaderBlurredDirective,\n  ],\n  exports: [\n    NgxUiLoaderComponent,\n    NgxUiLoaderBlurredDirective,\n  ]\n})\nexport class NgxUiLoaderModule {\n\n  /**\n   * forRoot\n   * @param ngxUiLoaderConfig\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(ngxUiLoaderConfig: NgxUiLoaderConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_CONFIG_TOKEN,\n          useValue: ngxUiLoaderConfig\n        }\n      ]\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\n\n/**\n * Injection token for ngx-ui-loader-router configuration\n */\nexport const NGX_UI_LOADER_ROUTER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderRouterConfig>('ngxUiLoaderRouterCustom.config');\n","/**\n * Router loader id\n */\nexport const ROUTER_LOADER_ID = '$_router_loader';\n","import { NgModule, ModuleWithProviders, Inject, Optional, SkipSelf } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\nimport { NGX_UI_LOADER_ROUTER_CONFIG_TOKEN } from './ngx-ui-loader-router-config.token';\nimport { ROUTER_LOADER_ID } from './ngx-ui-loader-router.constants';\n\n@NgModule({})\nexport class NgxUiLoaderRouterModule {\n\n  /**\n   * forRoot\n   * @param routerConfig Configuration\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(routerConfig: NgxUiLoaderRouterConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderRouterModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_ROUTER_CONFIG_TOKEN,\n          useValue: routerConfig\n        }\n      ]\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param parentModule\n   * @param config\n   * @param router\n   * @param ngxUiLoaderService\n   */\n  constructor(\n    @Optional() @SkipSelf() parentModule: NgxUiLoaderRouterModule,\n    @Optional() @Inject(NGX_UI_LOADER_ROUTER_CONFIG_TOKEN) config: NgxUiLoaderRouterConfig,\n    router: Router,\n    ngxUiLoaderService: NgxUiLoaderService) {\n\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderRouterModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n\n    let defaultConfig: NgxUiLoaderRouterConfig = {\n      loaderId: ngxUiLoaderService.getDefaultConfig().masterLoaderId,\n      showForeground: true\n    };\n\n    if (config) {\n      defaultConfig = { ...defaultConfig, ...config };\n    }\n\n    router.events\n      .subscribe(event => {\n        if (event instanceof NavigationStart) {\n          if (defaultConfig.showForeground) {\n            ngxUiLoaderService.startLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          } else {\n            ngxUiLoaderService.startBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          }\n        }\n\n        if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n          if (defaultConfig.showForeground) {\n            ngxUiLoaderService.stopLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          } else {\n            ngxUiLoaderService.stopBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          }\n        }\n      });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\n\n/**\n * Injection token for ngx-ui-loader-http configuration\n */\nexport const NGX_UI_LOADER_HTTP_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderHttpConfig>('ngxUiLoaderHttpCustom.config');\n","/**\n * Http loader id\n */\nexport const HTTP_LOADER_ID = '$_http-loader';\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\nimport { HTTP_LOADER_ID } from './ngx-ui-loader-http.constants';\n\n@Injectable()\nexport class NgxUiLoaderHttpInterceptor implements HttpInterceptor {\n\n  private count: number;\n  private defaultConfig: NgxUiLoaderHttpConfig;\n  private exclude: string[];\n  private excludeRegexp: RegExp[];\n\n  /**\n   * Constructor\n   * @param config\n   * @param ngxUiLoaderService\n   */\n  constructor(@Optional() @Inject(NGX_UI_LOADER_HTTP_CONFIG_TOKEN) config: NgxUiLoaderHttpConfig,\n    private ngxUiLoaderService: NgxUiLoaderService) {\n\n    this.count = 0;\n    this.defaultConfig = {\n      loaderId: this.ngxUiLoaderService.getDefaultConfig().masterLoaderId,\n      showForeground: false\n    };\n\n    if (config) {\n      if (config.exclude) {\n        this.exclude = config.exclude.map(url => url.toLowerCase());\n      }\n      if (config.excludeRegexp) {\n        this.excludeRegexp = config.excludeRegexp.map(regexp => new RegExp(regexp, 'i'));\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...config };\n    }\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.isIgnored(req.url)) {\n      return next.handle(req);\n    }\n\n    this.count++;\n    if (this.defaultConfig.showForeground) {\n      if (!this.ngxUiLoaderService.hasForeground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\n        this.ngxUiLoaderService.startLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n      }\n    } else {\n      if (!this.ngxUiLoaderService.hasBackground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\n        this.ngxUiLoaderService.startBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n      }\n    }\n\n    return next.handle(req).pipe(finalize(() => {\n      this.count--;\n      if (this.count === 0) {\n        if (this.defaultConfig.showForeground) {\n          this.ngxUiLoaderService.stopLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n        } else {\n          this.ngxUiLoaderService.stopBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n        }\n      }\n    }));\n  }\n\n  private isIgnored(url: string): boolean {\n    if (this.exclude) {\n      // do not show the loader for api urls in the `exclude` list\n      if (this.exclude.findIndex(str => url.toLowerCase().startsWith(str)) !== -1) {\n        return true;\n      }\n    }\n\n    if (this.excludeRegexp) {\n      // do not show the loader for api urls which matches regexps in the `excludeRegexp` list\n      if (this.excludeRegexp.findIndex(regexp => regexp.test(url)) !== -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgxUiLoaderHttpInterceptor } from './ngx-ui-loader-http.interceptor';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NgxUiLoaderHttpInterceptor,\n      multi: true\n    }\n  ],\n})\nexport class NgxUiLoaderHttpModule {\n\n  /**\n   * Constructor\n   * @param parentModule optional\n   */\n  constructor(@Optional() @SkipSelf() parentModule: NgxUiLoaderHttpModule) {\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderHttpModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n  }\n\n  /**\n   * forRoot\n   * @param httpConfig Configuration\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(httpConfig: NgxUiLoaderHttpConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderHttpModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_HTTP_CONFIG_TOKEN,\n          useValue: httpConfig\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;IAIE,mBAAoB,qBAAqB;IACzC,UAAW,WAAW;IACtB,mBAAoB,qBAAqB;IACzC,+BAAgC,mCAAmC;IACnE,sBAAuB,yBAAyB;IAChD,aAAc,cAAc;IAC5B,QAAS,QAAQ;IACjB,UAAW,WAAW;IACtB,cAAe,eAAe;IAC9B,cAAe,eAAe;IAC9B,aAAc,cAAc;IAC5B,OAAQ,OAAO;IACf,iBAAkB,kBAAkB;IACpC,sBAAuB,wBAAwB;IAC/C,yBAA0B,4BAA4B;IACtD,8BAA+B,kCAAkC;IACjE,eAAgB,gBAAgB;IAChC,gBAAiB,kBAAkB;IACnC,cAAe,eAAe;IAC9B,aAAc,cAAc;IAC5B,cAAe,eAAe;IAC9B,gBAAiB,iBAAiB;;;;IAOlC,cAAe,eAAe;IAC9B,YAAa,aAAa;IAC1B,aAAc,cAAc;IAC5B,cAAe,eAAe;IAC9B,YAAa,aAAa;IAC1B,aAAc,cAAc;IAC5B,WAAY,YAAY;IACxB,SAAU,UAAU;IACpB,UAAW,WAAW;;;;IAOtB,aAAc,KAAK;IACnB,aAAc,KAAK;;;;;;;AC/CrB;;;;AAKA,IAAa,eAAe,GAAG,SAAS;;;;;AAKxC,IAAa,wBAAwB,GAAG,QAAQ;;AAEhD,IAAa,YAAY,GAAG,IAAI;;AAEhC,IAAa,6BAA6B,GAAG,GAAG;;;;;AAKhD,IAAa,cAAc,GAAG;IAC5B,qBAAqB,EAAE;QACrB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,wBAAwB;KAChC;IACD,WAAW,EAAE;QACX,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,cAAc;KACtB;IACD,qBAAqB,EAAE;QACrB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,wBAAwB;KAChC;IACD,mCAAmC,EAAE;QACnC,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,sCAAsC;KAC9C;IACD,yBAAyB,EAAE;QACzB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,4BAA4B;KACpC;IACD,cAAc,EAAE;QACd,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,iBAAiB;KACzB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,EAAE;QACR,KAAK,EAAE,WAAW;KACnB;IACD,WAAW,EAAE;QACX,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,cAAc;KACtB;IACD,eAAe,EAAE;QACf,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,kBAAkB;KAC1B;IACD,eAAe,EAAE;QACf,IAAI,EAAE,EAAE;QACR,KAAK,EAAE,kBAAkB;KAC1B;IACD,cAAc,EAAE;QACd,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,iBAAiB;KACzB;IACD,OAAO,EAAG;QACR,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,UAAU;KAClB;IACD,kBAAkB,EAAE;QAClB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,qBAAqB;KAC7B;IACD,wBAAwB,EAAE;QACxB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,2BAA2B;KACnC;IACD,4BAA4B,EAAE;QAC5B,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,+BAA+B;KACvC;IACD,kCAAkC,EAAE;QAClC,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,qCAAqC;KAC7C;IACD,gBAAgB,EAAE;QAChB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,mBAAmB;KAC3B;IACD,kBAAkB,EAAE;QAClB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,qBAAqB;KAC7B;IACD,eAAe,EAAE;QACf,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,kBAAkB;KAC1B;IACD,cAAc,EAAE;QACd,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,iBAAiB;KACzB;IACD,eAAe,EAAE;QACf,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,kBAAkB;KAC1B;IACD,iBAAiB,EAAE;QACjB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,oBAAoB;KAC5B;CACF;;;;;AAKD,IAAa,cAAc,GAAsB;IAC/C,QAAQ,EAAE,SAAS;IACnB,UAAU,EAAE,GAAG;IACf,WAAW,EAAE,QAAQ,CAAC,WAAW;IACjC,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,OAAO,CAAC,iBAAiB;IAClC,IAAI,EAAE,CAAC;IACP,QAAQ,EAAE,SAAS;IACnB,WAAW,EAAE,QAAQ,CAAC,YAAY;IAClC,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,OAAO,CAAC,iBAAiB;IAClC,GAAG,EAAE,EAAE;IACP,YAAY,EAAE,QAAQ,CAAC,YAAY;IACnC,QAAQ,EAAE,GAAG;IACb,OAAO,EAAE,EAAE;IACX,cAAc,EAAE,wBAAwB;IACxC,mBAAmB,EAAE,GAAG;IACxB,YAAY,EAAE,uBAAuB;IACrC,OAAO,EAAE,SAAS;IAClB,WAAW,EAAE,YAAY,CAAC,WAAW;IACrC,WAAW,EAAE,CAAC;IACd,cAAc,EAAE,IAAI;IACpB,IAAI,EAAE,EAAE;IACR,SAAS,EAAE,SAAS;IACpB,YAAY,EAAE,QAAQ,CAAC,YAAY;IACnC,SAAS,EAAE,GAAG;CACf;;;;;;AC5ID;;;;AAMA,IAAa,0BAA0B,GAAG,IAAI,cAAc,CAAoB,0BAA0B,CAAC;;;;;;;;;;;IC6CzG,4BAAoE,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;QAE3F,IAAI,CAAC,aAAa,gBAAQ,cAAc,CAAE,CAAC;QAE3C,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,EAAE;gBACvD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC;aAClD;YACD,IAAI,CAAC,aAAa,gBAAQ,IAAI,CAAC,aAAa,EAAK,IAAI,CAAC,MAAM,CAAE,CAAC;SAChE;QAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,IAAI,eAAe,CAAY,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACtF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAC1D,IAAI,CAAC,cAAc,GAAG,IAAI,eAAe,CAAY,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACtF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,eAAe,CAAY,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,IAAI,eAAe,CAAY,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;KACzD;;;;;;;;;;;IAMD,2CAAc;;;;;;IAAd,UAAe,QAAgB;;YACzB,QAAQ,GAAG,KAAK;QACpB,IAAI,QAAQ,KAAK,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE;YAClD,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC;YAC1C,QAAQ,GAAG,IAAI,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAC/C;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;;YAE3C,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;gBAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;aACtD;iBAAM;gBACL,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;oBAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;iBACtD;aACF;SACF;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;SACjD;KACF;;;;;;;;;;;;IAMD,2CAAc;;;;;;;IAAd,UAAe,QAAgB,EAAE,WAAmB;QAClD,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE;YACzE,OAAO,CAAC,IAAI,CAAC,yEAAyE;iBACpF,4BAAyB,IAAI,CAAC,aAAa,CAAC,cAAc,+BAA2B,CAAA;gBACrF,2DAA2D,CAAC,CAAC;YAC/D,OAAO;SACR;QACD,IAAI,WAAW,KAAK,QAAQ,EAAE;YAC5B,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG;gBAC1B,QAAQ,EAAE,WAAW;gBACrB,UAAU,eAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAE;gBACpD,UAAU,eAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAE;gBACpD,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO;aACxC,CAAC;YACF,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC/B;KACF;;;;;;;;;;;IAMD,8CAAiB;;;;;;IAAjB,UAAkB,QAAgB;QAChC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC/B;;;;;;;;;IAMD,6CAAgB;;;;IAAhB;QACE,oBAAY,IAAI,CAAC,aAAa,EAAG;KAClC;;;;;;;;IAKD,uCAAU;;;;IAAV;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;KACjD;;;;;;;;;IAKD,sCAAS;;;;;IAAT,UAAU,QAAiB;QACzB,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;SAC3C;aAAM;YACL,IAAI,CAAC,gCAAgC,EAAE,CAAC;YACxC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;SAC9C;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAC3D;;;;;;;;;;IAMD,sCAAS;;;;;IAAT;QACE,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,OAAO;YACL,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,UAAU;YAC7E,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,UAAU;SAC9E,CAAC;KACH;;;;;;;;;;;;;;;IASD,0CAAa;;;;;;;IAAb,UAAc,QAAgB,EAAE,MAAe;QAC7C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC1B,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;aACjE;YACD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SAClE;QACD,OAAO,KAAK,CAAC;KACd;;;;;;;;;;;;;;;IASD,0CAAa;;;;;;;IAAb,UAAc,QAAgB,EAAE,MAAe;QAC7C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC1B,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;aACjE;YACD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SAClE;QACD,OAAO,KAAK,CAAC;KACd;;;;;;;;;;;;;;IAQD,wCAAW;;;;;;;IAAX,UAAY,QAAgB,EAAE,MAAgC;QAAhC,uBAAA,EAAA,wBAAgC;QAC5D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;;YAE5C,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE;YACnC,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,EAAE;YACtB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;gBAChC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;gBAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;aACvD;YACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SACtD;KACF;;;;;;;;;;;;;;IAQD,kCAAK;;;;;;;IAAL,UAAM,MAAgC;QAAhC,uBAAA,EAAA,wBAAgC;QACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;KAC7D;;;;;;;;;;;;;;IAQD,kDAAqB;;;;;;;IAArB,UAAsB,QAAgB,EAAE,MAAgC;QAAhC,uBAAA,EAAA,wBAAgC;QACtE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAElD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE;YACnC,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SACtD;KACF;;;;;;;;;;;;;;IAQD,4CAAe;;;;;;;IAAf,UAAgB,MAAgC;QAAhC,uBAAA,EAAA,wBAAgC;QAC9C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;KACvE;;;;;;;;;;;;;IAQD,uCAAU;;;;;;IAAV,UAAW,QAAgB,EAAE,MAAgC;QAA7D,iBA+BC;QA/B4B,uBAAA,EAAA,wBAAgC;QAC3D,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;;;YAGpC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE;QACtB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE;YACxC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,GAAG,EAAE;gBAClF,UAAU;;;gBAAC;oBACT,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;iBACnC,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;gBACnF,OAAO;aACR;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAClD;aAAM;YACL,OAAO;SACR;;;QAID,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YACjC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;YACtD,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;gBAChC,UAAU;;;gBAAC;oBACT,IAAI,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;wBAChC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;qBACtD;iBACF,GAAE,6BAA6B,CAAC,CAAC;aACnC;SACF;;KAEF;;;;;;;;;;;IAOD,iCAAI;;;;;IAAJ,UAAK,MAAgC;QAAhC,uBAAA,EAAA,wBAAgC;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;KAC5D;;;;;;;;;;;;;IAQD,iDAAoB;;;;;;IAApB,UAAqB,QAAgB,EAAE,MAAgC;QAAvE,iBAwBC;QAxBsC,uBAAA,EAAA,wBAAgC;QACrE,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;;;YAGpC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE;QACtB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE;YACxC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,GAAG,EAAE;gBAClF,UAAU;;;gBAAC;oBACT,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;iBAC7C,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;gBACnF,OAAO;aACR;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAClD;aAAM;YACL,OAAO;SACR;;;QAID,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YAClE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;SACvD;;KAEF;;;;;;;;;;;IAOD,2CAAc;;;;;IAAd,UAAe,MAAgC;QAAhC,uBAAA,EAAA,wBAAgC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;KACtE;;;;;;;;;;IAMD,0CAAa;;;;;IAAb,UAAc,QAAgB;QAC5B,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YAChC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;SACvD;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YACvC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC;KACxC;;;;;;;;IAKD,oCAAO;;;;IAAP;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;KACvD;;;;;;;;;;;;;;;;;IASO,6CAAgB;;;;;;;;;IAAxB,UAAyB,QAAgB,EAAE,QAAiB,EAAE,OAAgB;QAC5E,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG;gBACvB,QAAQ,UAAA;gBACR,UAAU,EAAE,EAAE;gBACd,UAAU,EAAE,EAAE;gBACd,QAAQ,UAAA;gBACR,OAAO,SAAA;aACR,CAAC;SACH;KACF;;;;;;;;;;;;IAMO,uDAA0B;;;;;;;IAAlC,UAAmC,QAAgB;QACjD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,kCAA+B,QAAQ,uBAAmB,CAAC,CAAC;SAC7E;KACF;;;;;;;;;;;;;IAMO,qDAAwB;;;;;;;;IAAhC,UAAiC,QAAgB,EAAE,cAAwB;QACzE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,IAAI,cAAc,CAAC,EAAE;YAChF,MAAM,IAAI,KAAK,CAAC,kCAA+B,QAAQ,iDAA6C,CAAC,CAAC;SACvG;KACF;;;;;;;;;;;;IAMO,2DAA8B;;;;;;;IAAtC,UAAuC,cAAwB;QAC7D,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,OAAO,IAAI,cAAc,CAAC,EAAE;YAClI,MAAM,IAAI,KAAK,CAAC,2DAA2D;kBACvE,6FAA6F,CAAC,CAAC;SACpG;KACF;;;;;;;;;;;IAMO,6DAAgC;;;;;;IAAxC;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE;YACpD,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACxE;KACF;;;;;;;;;;;IAMO,+CAAkB;;;;;;IAA1B,UAA2B,QAAgB;QAA3C,iBAKC;QAJC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAChD,UAAU;;;QAAC;YACT,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;SAClD,GAAE,YAAY,CAAC,CAAC;KAClB;;;;;;;;;;;IAMO,+CAAkB;;;;;;IAA1B,UAA2B,QAAgB;QAA3C,iBAKC;QAJC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAChD,UAAU;;;QAAC;YACT,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;SAClD,GAAE,YAAY,CAAC,CAAC;KAClB;;gBA5cF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gDAyCc,QAAQ,YAAI,MAAM,SAAC,0BAA0B;;;6BAnD5D;CAQA;;;;;;;;;;;;ACHA,SAAgB,YAAY,CAAC,KAAK,EAAE,aAAa;IAC/C,OAAO,CAAC,KAAK,CAAC,UAAU,oBAAC,KAAK,GAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC;CAClG;;;;;;ACPD;;;;;;IAyEE,8BACU,YAA0B,EAC1B,iBAAoC,EACpC,UAA8B;QAF9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,eAAU,GAAV,UAAU,CAAoB;QAEtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;QAExD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC;QAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;KACrD;;;;;;;;IAKD,uCAAQ;;;;IAAR;QAAA,iBAuCC;QAtCC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,WAAW,sBAAiB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAA,CAAC;QAE1H,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAErF,IAAI,CAAC,WAAW,sBAAkB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAA,CAAC;QAE/H,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe;aACzD,IAAI,CAAC,MAAM;;;;QAAC,UAAC,SAAoB,IAAK,OAAA,KAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,GAAA,EAAC,CAAC;aAC5E,SAAS;;;;QAAC,UAAA,IAAI;YACb,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;YAClC,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;SACvC,EAAC,CAAC;QAEL,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe;aACzD,IAAI,CAAC,MAAM;;;;QAAC,UAAC,SAAoB,IAAK,OAAA,KAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,GAAA,EAAC,CAAC;aAC5E,SAAS;;;;QAAC,UAAA,IAAI;YACb,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;YAClC,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;SACvC,EAAC,CAAC;QAEL,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB;aAC/D,IAAI,CAAC,MAAM;;;;QAAC,UAAC,SAAoB,IAAK,OAAA,KAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,GAAA,EAAC,CAAC;aAC5E,SAAS;;;;QAAC,UAAA,IAAI;YACb,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;YACrC,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;SACvC,EAAC,CAAC;QAEL,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB;aAC/D,IAAI,CAAC,MAAM;;;;QAAC,UAAC,SAAoB,IAAK,OAAA,KAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,GAAA,EAAC,CAAC;aAC5E,SAAS;;;;QAAC,UAAA,IAAI;YACb,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;YACrC,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;SACvC,EAAC,CAAC;QACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;;;;;;;;;;IAMD,0CAAW;;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;;YAEK,aAAa,GAAiB,OAAO,CAAC,OAAO;;YAC7C,iBAAiB,GAAiB,OAAO,CAAC,WAAW;;YACrD,aAAa,GAAiB,OAAO,CAAC,OAAO;;YAC7C,cAAc,GAAiB,OAAO,CAAC,QAAQ;;YAC/C,aAAa,GAAiB,OAAO,CAAC,OAAO;;YAC7C,iBAAiB,GAAiB,OAAO,CAAC,WAAW;QAE3D,IAAI,aAAa,IAAI,aAAa,EAAE;YAClC,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QAED,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC7E;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,iBAAiB,EAAE;YACrB,IAAI,CAAC,WAAW,sBAAiB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAA,CAAC;SAC3H;QAED,IAAI,aAAa,EAAE;YACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,8BAA8B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACtF;QAED,IAAI,iBAAiB,EAAE;YACrB,IAAI,CAAC,WAAW,sBAAkB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAA,CAAC;SAChI;KACF;;;;;;;;;IAKO,iDAAkB;;;;;IAA1B;QACE,IAAI,CAAC,OAAO,sBAAgB,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAA,CAAC;QACxG,IAAI,CAAC,OAAO,sBAAgB,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAA,CAAC;QAExG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;KAC1D;;;;;;;;;IAKO,iDAAkB;;;;;IAA1B;QACE,IAAI,CAAC,WAAW,sBAAiB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAA,CAAC;QAC1H,IAAI,CAAC,YAAY,sBAAiB,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAA,CAAC;QAC9H,IAAI,CAAC,YAAY,sBAAiB,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAA,CAAC;QAC9H,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAE1D,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;YACnB,QAAQ,GAAG,EAAE;QAEnB,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACvB;QAED,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACzC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YAC7C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;SAC1B;QAED,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACvB;QAED,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ,CAAC,YAAY,EAAE;YAC9C,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,EAAE;gBAC/D,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,EAAE;oBAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY;yBAC7B,wBAAwB,CAAC,gBAAc,IAAI,CAAC,OAAO,GAAG,CAAC,aAAQ,QAAQ,GAAG,CAAC,aAAQ,IAAI,CAAC,GAAG,QAAK,CAAC,CAAC;oBACrG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY;yBAChC,wBAAwB,CAAC,gBAAc,IAAI,CAAC,QAAQ,GAAG,CAAC,aAAQ,QAAQ,GAAG,CAAC,QAAK,CAAC,CAAC;oBACtF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY;yBAC7B,wBAAwB,CAAC,gBAAc,IAAI,CAAC,QAAQ,GAAG,CAAC,aAAQ,IAAI,CAAC,GAAG,aAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,QAAK,CAAC,CAAC;iBAC3G;qBAAM;oBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY;yBAC7B,wBAAwB,CAAC,gBAAc,IAAI,CAAC,OAAO,GAAG,CAAC,aAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,QAAK,CAAC,CAAC;oBACrF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY;yBAChC,wBAAwB,CAAC,gBAAc,IAAI,CAAC,QAAQ,GAAG,CAAC,aAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,QAAK,CAAC,CAAC;iBACvF;aACF;iBAAM;gBACL,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,EAAE;oBAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY;yBAChC,wBAAwB,CAAC,gBAAc,QAAQ,GAAG,CAAC,aAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,QAAK,CAAC,CAAC;oBACjF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY;yBAC7B,wBAAwB,CAAC,gBAAc,IAAI,CAAC,OAAO,GAAG,CAAC,aAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,QAAK,CAAC,CAAC;iBACtF;aACF;SACF;aAAM;YACL,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY;mBAC1D,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,EAAE;gBAC7D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY;qBAC7B,wBAAwB,CAAC,gBAAc,QAAQ,GAAG,CAAC,aAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,QAAK,CAAC,CAAC;gBACjF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY;qBAC7B,wBAAwB,CAAC,gBAAc,IAAI,CAAC,QAAQ,GAAG,CAAC,aAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,QAAK,CAAC,CAAC;aACvF;SACF;KACF;;;;;;;;;IAEO,uCAAQ;;;;;;;;IAAhB,UAAiB,SAAiB,EAAE,KAAa,EAAE,YAAgB,EAAE,aAAqB;QACxF,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG;;;;QAAC,UAAA,CAAC,IAAI,OAAA,YAAY,CAAC,CAAC,CAAC,GAAA,EAAC,CAAC,SAAS;;;;QAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,KAAK,GAAA,EAAC,KAAK,CAAC,CAAC,EAAE;YAC1F,OAAO,CAAC,KAAK,CAAC,uBAAqB,SAAS,YAAM,KAAK,qBAAiB;mBACpE,qBAAkB,aAAa,gBAAY,CAAA,CAAC,CAAC;YACjD,OAAO,aAAa,CAAC;SACtB;QACD,OAAO,KAAK,CAAC;KACd;;;;;;;;IAKD,0CAAW;;;;IAAX;QACE,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;SAC7C;QACD,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;SAC7C;KACF;;gBAxRF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,0oEAA6C;oBAE7C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;gBAjBQ,YAAY;gBADiB,iBAAiB;gBAE9C,kBAAkB;;;2BAmBxB,KAAK;6BACL,KAAK;8BACL,KAAK;0BACL,KAAK;0BACL,KAAK;2BACL,KAAK;8BACL,KAAK;0BACL,KAAK;0BACL,KAAK;sBACL,KAAK;2BACL,KAAK;+BACL,KAAK;2BACL,KAAK;0BACL,KAAK;sCACL,KAAK;+BACL,KAAK;0BACL,KAAK;8BACL,KAAK;8BACL,KAAK;iCACL,KAAK;uBACL,KAAK;4BACL,KAAK;+BACL,KAAK;;IA2PR,2BAAC;CAzRD;;;;;;ACdA;IA2BE,qCACU,UAAsB,EACtB,QAAmB,EACnB,kBAAsC;QAFtC,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QACnB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAE9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC;QAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,cAAc,CAAC;KAC3E;IApBD,sBACI,6CAAI;;;;QADR;YAEE,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;;;;;QAED,UAAS,KAAa;YACpB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC;SACxF;;;OAJA;;;;;;;;IAsBD,8CAAQ;;;;IAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe;aACjE,IAAI,CAAC,MAAM;;;;QAAC,UAAC,SAAoB,IAAK,OAAA,KAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,GAAA,EAAC,CAAC;aAC5E,SAAS;;;;QAAC,UAAA,IAAI;YACb,IAAI,IAAI,CAAC,MAAM,EAAE;;oBACT,WAAW,GAAG,UAAQ,KAAI,CAAC,UAAU,QAAK;gBAChD,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAC;gBACrF,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;aAC9E;iBAAM;gBACL,UAAU;;;gBAAC;oBACT,IAAI,CAAC,KAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;wBACzD,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC;wBAChF,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;qBACzE;iBACF,GAAE,6BAA6B,CAAC,CAAC;aACnC;SACF,EAAC,CAAC;KACN;;;;;;;;IAKD,iDAAW;;;;IAAX;QACE,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;SAC1C;KACF;;gBAxDF,SAAS,SAAC,EAAE,QAAQ,EAAE,sBAAsB,EAAE;;;;gBAT3B,UAAU;gBAAoB,SAAS;gBAIlD,kBAAkB;;;uBAUxB,KAAK;2BASL,KAAK;;IA2CR,kCAAC;CAzDD;;;;;;ACTA;IAQA;KA+BC;;;;;;;;;;;IAXQ,yBAAO;;;;;IAAd,UAAe,iBAAoC;QACjD,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,0BAA0B;oBACnC,QAAQ,EAAE,iBAAiB;iBAC5B;aACF;SACF,CAAC;KACH;;gBA9BF,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,YAAY,EAAE;wBACZ,oBAAoB;wBACpB,2BAA2B;qBAC5B;oBACD,OAAO,EAAE;wBACP,oBAAoB;wBACpB,2BAA2B;qBAC5B;iBACF;;IAmBD,wBAAC;CA/BD;;;;;;ACRA;;;;AAMA,IAAa,iCAAiC,GAAG,IAAI,cAAc,CAA0B,gCAAgC,CAAC;;;;;;;;;;ACH9H,IAAa,gBAAgB,GAAG,iBAAiB;;;;;;;;;;;;;;;ICiC/C,iCAC0B,YAAqC,EACN,MAA+B,EACtF,MAAc,EACd,kBAAsC;QAEtC,IAAI,YAAY,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,kHAAkH,CAAC,CAAC;SACrI;;YAEG,aAAa,GAA4B;YAC3C,QAAQ,EAAE,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,cAAc;YAC9D,cAAc,EAAE,IAAI;SACrB;QAED,IAAI,MAAM,EAAE;YACV,aAAa,gBAAQ,aAAa,EAAK,MAAM,CAAE,CAAC;SACjD;QAED,MAAM,CAAC,MAAM;aACV,SAAS;;;;QAAC,UAAA,KAAK;YACd,IAAI,KAAK,YAAY,eAAe,EAAE;gBACpC,IAAI,aAAa,CAAC,cAAc,EAAE;oBAChC,kBAAkB,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;iBAC1E;qBAAM;oBACL,kBAAkB,CAAC,qBAAqB,CAAC,aAAa,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;iBACpF;aACF;YAED,IAAI,KAAK,YAAY,aAAa,IAAI,KAAK,YAAY,gBAAgB,IAAI,KAAK,YAAY,eAAe,EAAE;gBAC3G,IAAI,aAAa,CAAC,cAAc,EAAE;oBAChC,kBAAkB,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;iBACzE;qBAAM;oBACL,kBAAkB,CAAC,oBAAoB,CAAC,aAAa,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;iBACnF;aACF;SACF,EAAC,CAAC;KACN;;;;;;;;;;;IAzDM,+BAAO;;;;;IAAd,UAAe,YAAqC;QAClD,OAAO;YACL,QAAQ,EAAE,uBAAuB;YACjC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,iCAAiC;oBAC1C,QAAQ,EAAE,YAAY;iBACvB;aACF;SACF,CAAC;KACH;;gBAlBF,QAAQ,SAAC,EAAE;;;;gBA6B8B,uBAAuB,uBAA5D,QAAQ,YAAI,QAAQ;gDACpB,QAAQ,YAAI,MAAM,SAAC,iCAAiC;gBArCmB,MAAM;gBAEzE,kBAAkB;;IAuE3B,8BAAC;CAlED;;;;;;ACRA;;;;AAMA,IAAa,+BAA+B,GAAG,IAAI,cAAc,CAAwB,8BAA8B,CAAC;;;;;;;;;;ACHxH,IAAa,cAAc,GAAG,eAAe;;;;;;;;;;;;ICoB3C,oCAAiE,MAA6B,EACpF,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAE9C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,GAAG;YACnB,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC,cAAc;YACnE,cAAc,EAAE,KAAK;SACtB,CAAC;QAEF,IAAI,MAAM,EAAE;YACV,IAAI,MAAM,CAAC,OAAO,EAAE;gBAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG;;;;gBAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,WAAW,EAAE,GAAA,EAAC,CAAC;aAC7D;YACD,IAAI,MAAM,CAAC,aAAa,EAAE;gBACxB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG;;;;gBAAC,UAAA,MAAM,IAAI,OAAA,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAA,EAAC,CAAC;aAClF;YACD,IAAI,CAAC,aAAa,gBAAQ,IAAI,CAAC,aAAa,EAAK,MAAM,CAAE,CAAC;SAC3D;KACF;;;;;;IAED,8CAAS;;;;;IAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBA0BC;QAzBC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,EAAE;gBACvF,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;aAClF;SACF;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,EAAE;gBACvF,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;aAC5F;SACF;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ;;;QAAC;YACpC,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,KAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACpB,IAAI,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE;oBACrC,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;iBACjF;qBAAM;oBACL,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;iBAC3F;aACF;SACF,EAAC,CAAC,CAAC;KACL;;;;;;IAEO,8CAAS;;;;;IAAjB,UAAkB,GAAW;QAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;;YAEhB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS;;;;YAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,GAAA,EAAC,KAAK,CAAC,CAAC,EAAE;gBAC3E,OAAO,IAAI,CAAC;aACb;SACF;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;;YAEtB,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS;;;;YAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,EAAC,KAAK,CAAC,CAAC,EAAE;gBACnE,OAAO,IAAI,CAAC;aACb;SACF;QAED,OAAO,KAAK,CAAC;KACd;;gBA7EF,UAAU;;;;gDAaI,QAAQ,YAAI,MAAM,SAAC,+BAA+B;gBAlBxD,kBAAkB;;IAmF3B,iCAAC;CA9ED;;;;;;ACVA;;;;;IAsBE,+BAAoC,YAAmC;QACrE,IAAI,YAAY,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,gHAAgH,CAAC,CAAC;SACnI;KACF;;;;;;;;;;;IAOM,6BAAO;;;;;IAAd,UAAe,UAAiC;QAC9C,OAAO;YACL,QAAQ,EAAE,qBAAqB;YAC/B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,+BAA+B;oBACxC,QAAQ,EAAE,UAAU;iBACrB;aACF;SACF,CAAC;KACH;;gBApCF,QAAQ,SAAC;oBACR,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,QAAQ,EAAE,0BAA0B;4BACpC,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;;;;gBAOmD,qBAAqB,uBAA1D,QAAQ,YAAI,QAAQ;;IAsBnC,4BAAC;CArCD;;;;;;;;;;;;;;"}
