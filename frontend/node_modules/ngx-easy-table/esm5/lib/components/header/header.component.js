/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var HeaderComponent = /** @class */ (function () {
    function HeaderComponent() {
        this.update = new EventEmitter();
    }
    /**
     * @param {?} key
     * @return {?}
     */
    HeaderComponent.prototype.unifyKey = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return key.replace('.', '_');
    };
    /**
     * @param {?} input
     * @return {?}
     */
    HeaderComponent.prototype.onSearch = /**
     * @param {?} input
     * @return {?}
     */
    function (input) {
        this.update.emit([
            { value: input.value, key: this.column.key },
        ]);
    };
    HeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'table-header',
                    template: "<label for=\"search_{{ unifyKey(column.key) }}\">\n  <input type=\"text\"\n         id=\"search_{{ unifyKey(column.key) }}\"\n         aria-label=\"Search\"\n         placeholder=\"{{ column.placeholder ? column.placeholder : column.title }}\"\n         class=\"ngx-table__header-search\"\n         #input\n         (input)=\"onSearch(input)\"\n  >\n</label>\n"
                }] }
    ];
    HeaderComponent.propDecorators = {
        column: [{ type: Input }],
        update: [{ type: Output }]
    };
    return HeaderComponent;
}());
export { HeaderComponent };
if (false) {
    /** @type {?} */
    HeaderComponent.prototype.column;
    /** @type {?} */
    HeaderComponent.prototype.update;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1lYXN5LXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHdkU7SUFBQTtRQU9xQixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQXlDLENBQUM7SUFXeEYsQ0FBQzs7Ozs7SUFUQyxrQ0FBUTs7OztJQUFSLFVBQVMsR0FBVztRQUNsQixPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQy9CLENBQUM7Ozs7O0lBRUQsa0NBQVE7Ozs7SUFBUixVQUFTLEtBQXVCO1FBQzlCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ2YsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUU7U0FDN0MsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBakJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsb1hBQTRCO2lCQUM3Qjs7O3lCQUdFLEtBQUs7eUJBQ0wsTUFBTTs7SUFXVCxzQkFBQztDQUFBLEFBbEJELElBa0JDO1NBYlksZUFBZTs7O0lBQzFCLGlDQUF5Qjs7SUFDekIsaUNBQXNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbHVtbnMgfSBmcm9tICcuLi8uLic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhYmxlLWhlYWRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9oZWFkZXIuaHRtbCcsXG59KVxuXG5leHBvcnQgY2xhc3MgSGVhZGVyQ29tcG9uZW50IHtcbiAgQElucHV0KCkgY29sdW1uOiBDb2x1bW5zO1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgdXBkYXRlID0gbmV3IEV2ZW50RW1pdHRlcjxBcnJheTx7IGtleTogc3RyaW5nOyB2YWx1ZTogc3RyaW5nIH0+PigpO1xuXG4gIHVuaWZ5S2V5KGtleTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4ga2V5LnJlcGxhY2UoJy4nLCAnXycpO1xuICB9XG5cbiAgb25TZWFyY2goaW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQpOiB2b2lkIHtcbiAgICB0aGlzLnVwZGF0ZS5lbWl0KFtcbiAgICAgIHsgdmFsdWU6IGlucHV0LnZhbHVlLCBrZXk6IHRoaXMuY29sdW1uLmtleSB9LFxuICAgIF0pO1xuICB9XG59XG4iXX0=