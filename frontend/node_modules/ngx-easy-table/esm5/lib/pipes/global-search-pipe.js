/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
var GlobalSearchPipe = /** @class */ (function () {
    function GlobalSearchPipe() {
    }
    /**
     * @param {?} dataArr
     * @param {?} filter
     * @return {?}
     */
    GlobalSearchPipe.prototype.transform = /**
     * @param {?} dataArr
     * @param {?} filter
     * @return {?}
     */
    function (dataArr, filter) {
        if (typeof dataArr === 'undefined') {
            return;
        }
        if (typeof filter === 'undefined' || Object.keys(filter).length === 0 || filter === '') {
            return dataArr;
        }
        return dataArr.filter((/**
         * @param {?} row
         * @return {?}
         */
        function (row) {
            /** @type {?} */
            var element = JSON.stringify(Object.values(row));
            return element.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1;
        }));
    };
    GlobalSearchPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'global',
                },] }
    ];
    return GlobalSearchPipe;
}());
export { GlobalSearchPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLXNlYXJjaC1waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWVhc3ktdGFibGUvIiwic291cmNlcyI6WyJsaWIvcGlwZXMvZ2xvYmFsLXNlYXJjaC1waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUVwRDtJQUFBO0lBaUJBLENBQUM7Ozs7OztJQVpDLG9DQUFTOzs7OztJQUFULFVBQVUsT0FBYyxFQUFFLE1BQWM7UUFDdEMsSUFBSSxPQUFPLE9BQU8sS0FBSyxXQUFXLEVBQUU7WUFDbEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLE1BQU0sS0FBSyxFQUFFLEVBQUU7WUFDdEYsT0FBTyxPQUFPLENBQUM7U0FDaEI7UUFDRCxPQUFPLE9BQU8sQ0FBQyxNQUFNOzs7O1FBQUMsVUFBQyxHQUFHOztnQkFDbEIsT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNsRCxPQUFPLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2hGLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBaEJGLElBQUksU0FBQztvQkFDSixJQUFJLEVBQUUsUUFBUTtpQkFDZjs7SUFlRCx1QkFBQztDQUFBLEFBakJELElBaUJDO1NBYlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AUGlwZSh7XG4gIG5hbWU6ICdnbG9iYWwnLFxufSlcblxuZXhwb3J0IGNsYXNzIEdsb2JhbFNlYXJjaFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGRhdGFBcnI6IGFueVtdLCBmaWx0ZXI6IHN0cmluZykge1xuICAgIGlmICh0eXBlb2YgZGF0YUFyciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBmaWx0ZXIgPT09ICd1bmRlZmluZWQnIHx8IE9iamVjdC5rZXlzKGZpbHRlcikubGVuZ3RoID09PSAwIHx8IGZpbHRlciA9PT0gJycpIHtcbiAgICAgIHJldHVybiBkYXRhQXJyO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YUFyci5maWx0ZXIoKHJvdykgPT4ge1xuICAgICAgY29uc3QgZWxlbWVudCA9IEpTT04uc3RyaW5naWZ5KE9iamVjdC52YWx1ZXMocm93KSk7XG4gICAgICByZXR1cm4gZWxlbWVudC50b0xvY2FsZUxvd2VyQ2FzZSgpLmluZGV4T2YoZmlsdGVyLnRvTG9jYWxlTG93ZXJDYXNlKCkpICE9PSAtMTtcbiAgICB9KTtcbiAgfVxufVxuIl19