!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("rxjs"),require("rxjs/operators"),require("@angular/cdk/drag-drop"),require("@angular/common"),require("@angular/core"),require("ngx-pagination")):"function"==typeof define&&define.amd?define("ngx-easy-table",["exports","rxjs","rxjs/operators","@angular/cdk/drag-drop","@angular/common","@angular/core","ngx-pagination"],n):n(e["ngx-easy-table"]={},e.rxjs,e.rxjs.operators,e.ng.cdk["drag-drop"],e.ng.common,e.ng.core,e.ngxPagination)}(this,function(e,o,a,n,t,i,r){"use strict";var l=function(){return(l=Object.assign||function(e){for(var n,t=1,o=arguments.length;t<o;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)};function s(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var o,a,i=t.call(e),r=[];try{for(;(void 0===n||0<n--)&&!(o=i.next()).done;)r.push(o.value)}catch(l){a={error:l}}finally{try{o&&!o.done&&(t=i["return"])&&t.call(i)}finally{if(a)throw a.error}}return r}function c(){for(var e=[],n=0;n<arguments.length;n++)e=e.concat(s(arguments[n]));return e}var g={TINY:"tiny",BIG:"big",NORMAL:"normal"},u={LIGHT:"light",DARK:"dark"},p={onPagination:"onPagination",onOrder:"onOrder",onGlobalSearch:"onGlobalSearch",onSearch:"onSearch",onClick:"onClick",onDoubleClick:"onDoubleClick",onCheckboxSelect:"onCheckboxSelect",onSelectAll:"onSelectAll",onColumnResizeMouseDown:"onColumnResizeMouseDown",onColumnResizeMouseUp:"onColumnResizeMouseUp",onRowDrop:"onRowDrop",onRowCollapsedShow:"onRowCollapsedShow",onRowCollapsedHide:"onRowCollapsedHide",onRowContextMenu:"onRowContextMenu"},d={rowContextMenuClicked:"rowContextMenuClicked",setInputValue:"setInputValue",toolPanelClicked:"toolPanelClicked",onGlobalSearch:"onGlobalSearch",setPaginationCurrentPage:"setPaginationCurrentPage",getPaginationCurrentPage:"getPaginationCurrentPage",getPaginationTotalItems:"getPaginationTotalItems",getPaginationLastPage:"getPaginationLastPage",setPaginationRange:"setPaginationRange",setPaginationPreviousLabel:"setPaginationPreviousLabel",setPaginationNextLabel:"setPaginationNextLabel",setPaginationDisplayLimit:"setPaginationDisplayLimit",setTableClass:"setTableClass",setRowClass:"setRowClass",setCellClass:"setCellClass",setRowStyle:"setRowStyle",setCellStyle:"setCellStyle",sortBy:"sortBy"},h={searchEnabled:!1,headerEnabled:!0,orderEnabled:!0,orderEventOnly:!1,paginationEnabled:!0,exportEnabled:!1,clickEvent:!0,selectRow:!1,selectCol:!1,selectCell:!1,rows:10,additionalActions:!1,serverPagination:!1,isLoading:!1,detailsTemplate:!1,groupRows:!1,paginationRangeEnabled:!0,collapseAllRows:!1,checkboxes:!1,resizeColumn:!1,fixedColumnWidth:!0,horizontalScroll:!1,draggable:!1,logger:!1,showDetailsArrow:!1,showContextMenu:!1,persistState:!1,paginationMaxSize:5,threeWaySort:!1,tableLayout:{style:g.NORMAL,theme:u.LIGHT,borderless:!1,hover:!0,striped:!1}},f=function(){function e(){}return e.config=h,e.decorators=[{type:i.Injectable}],e}(),m=function(){function e(){}return e.doGroupRows=function(e,n){var t=[];return o.from(e).pipe(a.groupBy(function(e){return e[n]}),a.flatMap(function(e){return e.pipe(a.reduce(function(e,n){return c(e,[n])},[]))})).subscribe(function(e){return t.push(e)}),t},e.decorators=[{type:i.Injectable}],e}(),y=function(){function e(){}return e.setRowClass=function(e){var n="#table > tbody > tr:nth-child("+e.row+")",t=document.querySelector(n);t&&(t.className=e.className)},e.setCellClass=function(e){var n="#table > tbody > tr:nth-child("+e.row+") > td:nth-child("+e.cell+")",t=document.querySelector(n);t&&(t.className=e.className)},e.setRowStyle=function(e){var n="#table > tbody > tr:nth-child("+e.row+")",t=document.querySelector(n);t&&(t.style[e.attr]=e.value)},e.setCellStyle=function(e){var n="#table > tbody > tr:nth-child("+e.row+") > td:nth-child("+e.cell+")",t=document.querySelector(n);t&&(t.style[e.attr]=e.value)},e.decorators=[{type:i.Injectable}],e}(),b=function(){function e(e){this.cdr=e,this.tableClass=null,this.grouped=[],this.menuActive=!1,this.isSelected=!1,this.page=1,this.count=null,this.sortState=new Map,this.sortKey=null,this.rowContextMenuPosition={top:null,left:null,value:null},this.sortBy={key:"",order:"asc"},this.selectedDetailsTemplateRowId=new Set,this.loadingHeight="30px",this.onSelectAllBinded=this.onSelectAll.bind(this),this.id="table",this.event=new i.EventEmitter}return Object.defineProperty(e.prototype,"configuration",{get:function(){return this.config},set:function(e){this.config=e},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.columns||console.error("[columns] property required!"),this.configuration&&(f.config=this.configuration),this.config=f.config,this.limit=this.config.rows,this.groupRowsBy&&(this.grouped=m.doGroupRows(this.data,this.groupRowsBy)),this.doDecodePersistedState()},e.prototype.ngOnChanges=function(e){var n=e.data,t=e.pagination,o=e.groupRowsBy;if(this.toggleRowIndex=e.toggleRowIndex,n&&n.currentValue&&this.doApplyData(n),t&&t.currentValue&&(this.count=t.currentValue.count),o&&o.currentValue&&(this.grouped=m.doGroupRows(this.data,this.groupRowsBy)),this.toggleRowIndex&&this.toggleRowIndex.currentValue){var a=this.toggleRowIndex.currentValue;this.collapseRow(a.index)}},e.prototype.isOrderEnabled=function(e){var n=e.orderEnabled===undefined||!!e.orderEnabled;return f.config.orderEnabled&&n},e.prototype.orderBy=function(e){if(("undefined"==typeof e.orderEnabled||e.orderEnabled)&&(this.sortKey=e.key,f.config.orderEnabled&&""!==this.sortKey)){this.setColumnOrder(this.sortKey),f.config.orderEventOnly||e.orderEventOnly?(this.sortBy.key="",this.sortBy.order=""):(this.sortBy.key=this.sortKey,this.sortBy.order=this.sortState.get(this.sortKey)),f.config.serverPagination||(this.data=c(this.data)),this.sortBy=l({},this.sortBy);var n={key:this.sortKey,order:this.sortState.get(this.sortKey)};this.emitEvent(p.onOrder,n)}},e.prototype.onClick=function(e,n,t,o,a){if(f.config.selectRow&&(this.selectedRow=a),f.config.selectCol&&o&&(this.selectedCol=o),f.config.selectCell&&o&&(this.selectedRow=a,this.selectedCol=o),f.config.clickEvent){var i={event:e,row:n,key:t,rowId:a,colId:o};this.emitEvent(p.onClick,i)}},e.prototype.onDoubleClick=function(e,n,t,o,a){var i={event:e,row:n,key:t,rowId:a,colId:o};this.emitEvent(p.onDoubleClick,i)},e.prototype.onCheckboxSelect=function(e,n,t){var o={event:e,row:n,rowId:t};this.emitEvent(p.onCheckboxSelect,o)},e.prototype.onSelectAll=function(){this.isSelected=!this.isSelected,this.emitEvent(p.onSelectAll,this.isSelected)},e.prototype.onSearch=function(e){f.config.serverPagination||(this.term=e),this.emitEvent(p.onSearch,e)},e.prototype.onGlobalSearch=function(e){f.config.serverPagination||(this.globalSearchTerm=e),this.emitEvent(p.onGlobalSearch,e)},e.prototype.onPagination=function(e){this.page=e.page,this.limit=e.limit,this.emitEvent(p.onPagination,e)},e.prototype.emitEvent=function(e,n){this.event.emit({event:e,value:n}),this.config.persistState&&localStorage.setItem(e,JSON.stringify(n)),this.config.logger&&console.log({event:e,value:n})},e.prototype.collapseRow=function(e){this.selectedDetailsTemplateRowId.has(e)?(this.selectedDetailsTemplateRowId["delete"](e),this.emitEvent(p.onRowCollapsedHide,e)):(this.selectedDetailsTemplateRowId.add(e),this.emitEvent(p.onRowCollapsedShow,e))},e.prototype.doDecodePersistedState=function(){if(this.config.persistState){var e=localStorage.getItem(p.onPagination),n=localStorage.getItem(p.onOrder),t=localStorage.getItem(p.onSearch);if(e&&this.onPagination(JSON.parse(e)),n){var o=JSON.parse(n),a=o.key,i=o.order;this.sortBy.key=a,this.sortBy.order=i,this.data=c(this.data)}t&&(this.term=JSON.parse(t))}},e.prototype.isRowCollapsed=function(e){return!!this.config.collapseAllRows||this.selectedDetailsTemplateRowId.has(e)},e.prototype.onMouseDown=function(e,n){this.config.resizeColumn&&(this.th=n,this.startOffset=n.offsetWidth-e.pageX,this.emitEvent(p.onColumnResizeMouseDown,e))},e.prototype.onMouseMove=function(e){this.config.resizeColumn&&this.th&&this.th.style&&(this.th.style.width=this.startOffset+e.pageX+"px",this.th.style.cursor="col-resize",this.th.style["user-select"]="none")},e.prototype.onMouseUp=function(e){this.config.resizeColumn&&(this.emitEvent(p.onColumnResizeMouseUp,e),this.th.style.cursor="default",this.th=undefined)},Object.defineProperty(e.prototype,"isLoading",{get:function(){var e=document.getElementById("table");return e&&e.rows&&3<e.rows.length&&this.getLoadingHeight(e.rows),this.config.isLoading},enumerable:!0,configurable:!0}),e.prototype.getLoadingHeight=function(e){var n=this.config.searchEnabled?1:0,t=this.config.headerEnabled?1:0;this.loadingHeight=(e.length-n-t)*(e[3].offsetHeight-1)-2+"px"},e.prototype.getColumnWidth=function(e){return e.width?e.width:this.config.fixedColumnWidth?100/this.columns.length+"%":null},e.prototype.getColumnDefinition=function(e){return e.searchEnabled||"undefined"==typeof e.searchEnabled},Object.defineProperty(e.prototype,"arrowDefinition",{get:function(){return this.config.showDetailsArrow||"undefined"==typeof this.config.showDetailsArrow},enumerable:!0,configurable:!0}),e.prototype.onRowContextMenu=function(e,n,t,o,a){if(this.config.showContextMenu){e.preventDefault();var i={event:e,row:n,key:t,rowId:a,colId:o};this.rowContextMenuPosition={top:e.y-10+"px",left:e.x-10+"px",value:i},this.emitEvent(p.onRowContextMenu,i)}},e.prototype.doApplyData=function(e){var n=this.columns.find(function(e){return!!e.orderBy});n?(this.sortState.set(this.sortKey,"asc"===n.orderBy?"desc":"asc"),this.orderBy(n)):this.data=c(e.currentValue)},e.prototype.onDrop=function(e){this.emitEvent(p.onRowDrop,e),n.moveItemInArray(this.data,e.previousIndex,e.currentIndex)},e.prototype.apiEvent=function(e){return this.bindApi(e)},e.prototype.bindApi=function(e){switch(e.type){case d.rowContextMenuClicked:this.rowContextMenuPosition={top:null,left:null,value:null};break;case d.toolPanelClicked:break;case d.setInputValue:this.config.searchEnabled&&e.value.forEach(function(e){var n=document.getElementById("search_"+e.key);n?n.value=e.value:console.error("Column '"+e.key+"' not available in the DOM. Have you misspelled a name?")}),this.onSearch(e.value),this.cdr.detectChanges();break;case d.onGlobalSearch:this.onGlobalSearch(e.value),this.cdr.detectChanges();break;case d.setRowClass:if(Array.isArray(e.value)){e.value.forEach(function(e){return y.setRowClass(e)});break}y.setRowClass(e.value),this.cdr.detectChanges();break;case d.setCellClass:if(Array.isArray(e.value)){e.value.forEach(function(e){return y.setCellClass(e)});break}y.setCellClass(e.value);break;case d.setRowStyle:if(Array.isArray(e.value)){e.value.forEach(function(e){return y.setRowStyle(e)});break}y.setRowStyle(e.value);break;case d.setCellStyle:if(Array.isArray(e.value)){e.value.forEach(function(e){return y.setCellStyle(e)});break}y.setCellStyle(e.value);break;case d.setTableClass:this.tableClass=e.value,this.cdr.detectChanges();break;case d.getPaginationTotalItems:return this.paginationComponent.paginationDirective.getTotalItems();case d.setPaginationCurrentPage:this.paginationComponent.paginationDirective.setCurrent(e.value);break;case d.setPaginationRange:this.paginationComponent.ranges=e.value;break;case d.setPaginationPreviousLabel:this.paginationComponent.previousLabel=e.value;break;case d.setPaginationNextLabel:this.paginationComponent.nextLabel=e.value;break;case d.setPaginationDisplayLimit:this.paginationComponent.changeLimit(e.value,!0);break;case d.sortBy:var n={title:"",key:e.value.column,orderBy:e.value.order};this.orderBy(n),this.cdr.detectChanges()}},e.prototype.setColumnOrder=function(e){switch(this.sortState.get(e)){case"":case undefined:this.sortState.set(e,"desc");break;case"asc":this.config.threeWaySort?this.sortState.set(e,""):this.sortState.set(e,"desc");break;case"desc":this.sortState.set(e,"asc")}if(1<this.sortState.size){var n=this.sortState.get(e);this.sortState.clear(),this.sortState.set(e,n)}},e.decorators=[{type:i.Component,args:[{selector:"ngx-table",providers:[f,m,y],template:'<div class="ngx-container">\n  <table [id]="id"\n         [ngClass]="(tableClass === null || tableClass === \'\') ? \'ngx-table\' : tableClass"\n         [class.ngx-table__table--tiny]="config.tableLayout.style === \'tiny\'"\n         [class.ngx-table__table--normal]="config.tableLayout.style === \'normal\'"\n         [class.ngx-table__table--big]="config.tableLayout.style === \'big\'"\n         [class.ngx-table__table--borderless]="config.tableLayout.borderless"\n         [class.ngx-table__table--dark]="config.tableLayout.theme === \'dark\'"\n         [class.ngx-table__table--hoverable]="config.tableLayout.hover"\n         [class.ngx-table__table--striped]="config.tableLayout.striped"\n         [class.ngx-table__horizontal-scroll]="config.horizontalScroll && !isLoading">\n    <thead>\n    <tr class="ngx-table__header" *ngIf="config.headerEnabled">\n      <th *ngIf="config.checkboxes" width="3%">\n        <ng-container\n          *ngIf="selectAllTemplate"\n          [ngTemplateOutlet]="selectAllTemplate"\n          [ngTemplateOutletContext]="{ $implicit: onSelectAllBinded }">\n        </ng-container>\n        <label class="ngx-form-checkbox" *ngIf="!selectAllTemplate">\n          <input type="checkbox" (change)="onSelectAll()">\n          <i class="ngx-form-icon" id="selectAllCheckbox"></i>\n        </label>\n      </th>\n      <ng-container *ngFor="let column of columns;">\n        <th class="ngx-table__header-cell"\n            #th\n            [attr.width]="getColumnWidth(column)"\n            (mousedown)="onMouseDown($event, th)"\n            (mouseup)="onMouseUp($event)"\n            (mousemove)="onMouseMove($event)">\n          <div (click)="orderBy(column)" [class.pointer]="isOrderEnabled(column)">\n            <div class="ngx-table__header-title">{{ column.title }}<span>&nbsp;</span>\n              <div [style.display]="config.orderEnabled ? \'inline\' : \'none\' ">\n                <span *ngIf="sortKey === column.key && this.sortState.get(sortKey) === \'\'"> -</span>\n                <i *ngIf="sortKey === column.key && this.sortState.get(sortKey) === \'asc\'"\n                   class="ngx-icon ngx-icon-arrow-up">\n                </i>\n                <i *ngIf="sortKey === column.key && this.sortState.get(sortKey) === \'desc\'"\n                   class="ngx-icon ngx-icon-arrow-down">\n                </i>\n              </div>\n            </div>\n          </div>\n          <div class="ngx-table__column-resizer" *ngIf="config.resizeColumn"></div>\n        </th>\n      </ng-container>\n      <th *ngIf="config.additionalActions || config.detailsTemplate || config.collapseAllRows || config.groupRows"\n          class="ngx-table__header-cell-additional-actions">\n        <div class="ngx-dropdown ngx-active"\n             *ngIf="config.additionalActions"\n             [class.ngx-active]="menuActive">\n          <a class="ngx-btn ngx-btn-link" (click)="menuActive = !menuActive">\n            <span class="ngx-icon ngx-icon-menu"></span>\n          </a>\n          <ul class="ngx-menu ngx-table__table-menu">\n            <li class="ngx-menu-item">\n              <app-csv-export [data]="data"\n                              *ngIf="config.exportEnabled">\n              </app-csv-export>\n            </li>\n          </ul>\n        </div>\n      </th>\n    </tr>\n    <tr *ngIf="config.searchEnabled && !filtersTemplate"\n        class="ngx-table__sort-header">\n      <th *ngIf="config.checkboxes"></th>\n      <ng-container *ngFor="let column of columns">\n        <th>\n          <table-header\n            *ngIf="getColumnDefinition(column)"\n            (update)="onSearch($event)"\n            [column]="column">\n          </table-header>\n        </th>\n      </ng-container>\n      <th *ngIf="config.additionalActions || config.detailsTemplate"></th>\n    </tr>\n    <ng-container *ngIf="filtersTemplate">\n      <tr>\n        <ng-container [ngTemplateOutlet]="filtersTemplate">\n        </ng-container>\n      </tr>\n    </ng-container>\n    </thead>\n    <tbody *ngIf="data && !isLoading  && !config.draggable">\n    <ng-container *ngIf="rowTemplate">\n      <ul class="ngx-table__table-row-context-menu"\n          [ngStyle]="{\'position\': \'absolute\', \'top\': rowContextMenuPosition.top, \'left\': rowContextMenuPosition.left }"\n          *ngIf="rowContextMenuPosition.top">\n        <ng-container\n          [ngTemplateOutlet]="rowContextMenu"\n          [ngTemplateOutletContext]="{ $implicit: rowContextMenuPosition.value}">\n        </ng-container>\n      </ul>\n      <ng-container *ngFor="let row of data | sort:sortBy | search:term | global:globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n              let rowIndex = index">\n        <tr\n          (click)="onClick($event, row, \'\', null, rowIndex)"\n          (contextmenu)="onRowContextMenu($event, row, \'\', null, rowIndex)"\n          (dblclick)="onDoubleClick($event, row, \'\', null, rowIndex)"\n          [class.ngx-table__table-row--selected]="rowIndex == selectedRow && !config.selectCell">\n          <ng-container\n            [ngTemplateOutlet]="rowTemplate"\n            [ngTemplateOutletContext]="{ $implicit: row, index: rowIndex }">\n          </ng-container>\n          <td *ngIf="config.detailsTemplate">\n            <span class="ngx-icon"\n                  *ngIf="arrowDefinition"\n                  [ngClass]="isRowCollapsed(rowIndex) ? \'ngx-icon-arrow-down\' : \'ngx-icon-arrow-right\'"\n                  (click)="collapseRow(rowIndex)">\n            </span>\n          </td>\n        </tr>\n        <tr\n          *ngIf="(config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) || config.collapseAllRows">\n          <td [attr.colspan]="columns.length + 1">\n            <ng-container\n              [ngTemplateOutlet]="detailsTemplate"\n              [ngTemplateOutletContext]="{ $implicit: row, index: rowIndex  }">\n            </ng-container>\n          </td>\n        </tr>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf="!rowTemplate && !config.groupRows">\n      <ul class="ngx-table__table-row-context-menu"\n          [ngStyle]="{\'position\': \'absolute\', \'top\': rowContextMenuPosition.top, \'left\': rowContextMenuPosition.left }"\n          *ngIf="rowContextMenuPosition.top">\n        <ng-container\n          [ngTemplateOutlet]="rowContextMenu"\n          [ngTemplateOutletContext]="{ $implicit: rowContextMenuPosition.value}">\n        </ng-container>\n      </ul>\n      <ng-container\n        *ngFor="let row of data | sort:sortBy | search:term | global:globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n                  let rowIndex = index">\n        <tr [class.ngx-table__table-row--selected]="rowIndex == selectedRow && !config.selectCell">\n          <td *ngIf="config.checkboxes">\n            <label class="ngx-form-checkbox">\n              <input type="checkbox"\n                     id="checkbox-{{rowIndex}}"\n                     [checked]="isSelected"\n                     (change)="onCheckboxSelect($event, row, rowIndex)">\n              <i class="ngx-form-icon"></i>\n            </label>\n          </td>\n          <ng-container *ngFor="let column of columns; let colIndex = index">\n            <td (click)="onClick($event, row, column.key, colIndex, rowIndex)"\n                (contextmenu)="onRowContextMenu($event, row, column.key, colIndex, rowIndex)"\n                (dblclick)="onDoubleClick($event, row, column.key, colIndex, rowIndex)"\n                [class.ngx-table__table-col--selected]="colIndex == selectedCol && !config.selectCell"\n                [class.ngx-table__table-cell--selected]="colIndex == selectedCol && rowIndex == selectedRow && !config.selectCol && !config.selectRow"\n            >\n              <div *ngIf="!column.cellTemplate">{{ row | render:column.key }}</div>\n              <ng-container\n                *ngIf="column.cellTemplate"\n                [ngTemplateOutlet]="column.cellTemplate"\n                [ngTemplateOutletContext]="{ $implicit: row, rowIndex: rowIndex }">\n              </ng-container>\n            </td>\n          </ng-container>\n          <td *ngIf="config.additionalActions || config.detailsTemplate">\n            <span class="ngx-icon"\n                  *ngIf="arrowDefinition"\n                  [ngClass]="isRowCollapsed(rowIndex) ? \'ngx-icon-arrow-down\' : \'ngx-icon-arrow-right\'"\n                  (click)="collapseRow(rowIndex)">\n            </span>\n          </td>\n        </tr>\n        <tr\n          *ngIf="(config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) || config.collapseAllRows">\n          <td *ngIf="config.checkboxes"></td>\n          <td [attr.colspan]="columns.length + 1">\n            <ng-container\n              [ngTemplateOutlet]="detailsTemplate"\n              [ngTemplateOutletContext]="{ $implicit: row, index: rowIndex }">\n            </ng-container>\n          </td>\n        </tr>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf="!rowTemplate && config.groupRows">\n      <ng-container\n        *ngFor="let group of grouped | sort:sortBy:config | search:term:config | global:globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id }; let rowIndex = index">\n        <tr>\n          <ng-container *ngIf="!groupRowsHeaderTemplate">\n            <td [attr.colspan]="columns.length">\n              <div>{{group[0][groupRowsBy]}} ({{group.length}})</div>\n            </td>\n          </ng-container>\n          <ng-container\n            *ngIf="groupRowsHeaderTemplate"\n            [ngTemplateOutlet]="groupRowsHeaderTemplate"\n            [ngTemplateOutletContext]="{\n              total: group.length,\n              key: groupRowsBy,\n              value: group[0] ? group[0][groupRowsBy] : \'\',\n              group: group,\n              index: rowIndex\n            }">\n          </ng-container>\n          <td>\n            <span class="ngx-icon"\n                  *ngIf="arrowDefinition"\n                  [ngClass]="isRowCollapsed(rowIndex) ? \'ngx-icon-arrow-down\' : \'ngx-icon-arrow-right\'"\n                  (click)="collapseRow(rowIndex)">\n            </span>\n          </td>\n        </tr>\n        <ng-container *ngIf="selectedDetailsTemplateRowId.has(rowIndex)">\n          <tr *ngFor="let row of group">\n            <td *ngFor="let column of columns">\n              {{ row | render:column.key }}\n              \x3c!-- TODO allow users to add groupRowsTemplateRef --\x3e\n            </td>\n            <td></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    </tbody>\n    <tbody *ngIf="data && !config.isLoading && config.draggable" cdkDropList (cdkDropListDropped)="onDrop($event)">\n    <ng-container *ngIf="!rowTemplate && !config.groupRows">\n      <ng-container\n        *ngFor="let row of data | sort:sortBy | search:term | global:globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n                  let rowIndex = index">\n        <tr class="ngx-draggable-row" cdkDrag>\n          <td *ngIf="config.checkboxes">\n            <label class="ngx-form-checkbox">\n              <input type="checkbox"\n                     id="checkbox-draggable-{{rowIndex}}"\n                     [checked]="isSelected"\n                     (change)="onCheckboxSelect($event, row, rowIndex)">\n              <i class="ngx-form-icon"></i>\n            </label>\n          </td>\n          <ng-container *ngFor="let column of columns; let colIndex = index">\n            <td (click)="onClick($event, row, column.key, colIndex, rowIndex)"\n                (dblclick)="onDoubleClick($event, row, column.key, colIndex, rowIndex)"\n                [class.ngx-table__table-col--selected]="colIndex == selectedCol && !config.selectCell"\n                [class.ngx-table__table-cell--selected]="colIndex == selectedCol && rowIndex == selectedRow && !config.selectCol && !config.selectRow"\n            >\n              <div>{{ row | render:column.key }}</div>\n            </td>\n          </ng-container>\n        </tr>\n      </ng-container>\n    </ng-container>\n    </tbody>\n    <tbody *ngIf="!isLoading && (!data || (data && data.length < 1))">\n    <tr class="ngx-table__body-empty">\n      <ng-container\n        *ngIf="noResultsTemplate"\n        [ngTemplateOutlet]="noResultsTemplate">\n      </ng-container>\n      <td [attr.colspan]="columns && columns.length + 1" *ngIf="!noResultsTemplate">\n        <div class="ngx-table__table-no-results">\n          No results\n        </div>\n      </td>\n    </tr>\n    </tbody>\n    <tbody *ngIf="isLoading">\n    <tr class="ngx-table__body-loading">\n      <td [attr.colspan]="columns && columns.length + 1">\n        <div [style.height]="loadingHeight"\n             class="ngx-table__table-loader-wrapper">\n          <div class="ngx-table__table-loader"></div>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n    <tfoot *ngIf="summaryTemplate">\n    <tr>\n      <ng-container\n        [ngTemplateOutlet]="summaryTemplate"\n        [ngTemplateOutletContext]="{ total: data.length, limit: limit, page: page  }">\n      </ng-container>\n    </tr>\n    </tfoot>\n  </table>\n  <pagination\n    [attr.id]="\'pagination\' + id"\n    *ngIf="config.paginationEnabled"\n    [id]="id"\n    #paginationComponent\n    [config]="config"\n    [pagination]="pagination"\n    (updateRange)="onPagination($event)">\n  </pagination>\n</div>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.ChangeDetectorRef}]},e.propDecorators={paginationComponent:[{type:i.ViewChild,args:["paginationComponent"]}],th:[{type:i.ViewChild,args:["th"]}],configuration:[{type:i.Input,args:["configuration"]}],data:[{type:i.Input}],pagination:[{type:i.Input}],groupRowsBy:[{type:i.Input}],id:[{type:i.Input}],toggleRowIndex:[{type:i.Input}],detailsTemplate:[{type:i.Input}],summaryTemplate:[{type:i.Input}],groupRowsHeaderTemplate:[{type:i.Input}],filtersTemplate:[{type:i.Input}],selectAllTemplate:[{type:i.Input}],noResultsTemplate:[{type:i.Input}],rowContextMenu:[{type:i.Input}],columns:[{type:i.Input}],event:[{type:i.Output}],rowTemplate:[{type:i.ContentChild,args:[i.TemplateRef]}]},e}(),w=function(){function e(){}return e.prototype.exportCsv=function(){var t=this.data,o="data:text/csv;charset=utf-8,",a="",i=[],e=Object.keys(this.data[0]);t.forEach(function(n,t){i[t]=[],e.forEach(function(e){n.hasOwnProperty(e)&&("object"==typeof n[e]&&(n[e]="Object"),i[t].push(n[e]))})}),o+=e+"\n",i.forEach(function(e,n){a=e.join(","),o+=n<t.length?a+"\n":a});var n=encodeURI(o),r=document.createElement("a");r.setAttribute("href",n),r.setAttribute("download","my_data.csv"),r.click()},e.decorators=[{type:i.Component,args:[{selector:"app-csv-export",template:'\n    <a (click)="exportCsv()" class="ngx-menu-item">\n      CSV export\n    </a>'}]}],e.propDecorators={data:[{type:i.Input}]},e}(),x=function(){function e(){this.update=new i.EventEmitter}return e.prototype.unifyKey=function(e){return e.replace(".","_")},e.prototype.onSearch=function(e){this.update.emit([{value:e.value,key:this.column.key}])},e.decorators=[{type:i.Component,args:[{selector:"table-header",template:'<label for="search_{{ unifyKey(column.key) }}">\n  <input type="text"\n         id="search_{{ unifyKey(column.key) }}"\n         aria-label="Search"\n         placeholder="{{ column.placeholder ? column.placeholder : column.title }}"\n         class="ngx-table__header-search"\n         #input\n         (input)="onSearch(input)"\n  >\n</label>\n'}]}],e.propDecorators={column:[{type:i.Input}],update:[{type:i.Output}]},e}(),v=function(){function e(){this.updateRange=new i.EventEmitter,this.ranges=[5,10,25,50,100],this.limit=f.config.rows,this.showRange=!1,this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You are on page",this.previousLabel="",this.nextLabel="",this.directionLinks=!0}return e.prototype.onPageChange=function(e){this.updateRange.emit({page:e,limit:this.limit})},e.prototype.changeLimit=function(e,n){n||(this.showRange=!this.showRange),this.limit=e,this.updateRange.emit({page:1,limit:e})},e.decorators=[{type:i.Component,args:[{selector:"pagination",template:'<div class="ngx-pagination-wrapper"\n     [class.ngx-table__table--dark-pagination-wrapper]="config.tableLayout.theme === \'dark\'">\n  <div class="ngx-pagination-steps">\n    <pagination-template\n      #paginationDirective="paginationApi"\n      id="pagination-controls"\n      [id]="id"\n      [class.ngx-table__table--dark-pagination]="config.tableLayout.theme === \'dark\'"\n      [maxSize]="config.paginationMaxSize || 5"\n      (pageChange)="onPageChange($event)">\n      <ul class="ngx-pagination"\n          role="navigation"\n          [attr.aria-label]="screenReaderPaginationLabel"\n          [class.responsive]="true">\n        <li class="pagination-previous" [class.disabled]="paginationDirective.isFirstPage()" *ngIf="directionLinks">\n          <a tabindex="0" *ngIf="1 < paginationDirective.getCurrent()" (keyup.enter)="paginationDirective.previous()"\n             (click)="paginationDirective.previous()"\n             [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\n            {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n          </a>\n          <span *ngIf="paginationDirective.isFirstPage()">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n        <li class="small-screen">\n          {{ paginationDirective.getCurrent() }} / {{ paginationDirective.getLastPage() }}\n        </li>\n        <li [class.current]="paginationDirective.getCurrent() === page.value"\n            [class.ellipsis]="page.label === \'...\'"\n            *ngFor="let page of paginationDirective.pages">\n          <a tabindex="0" (keyup.enter)="paginationDirective.setCurrent(page.value)"\n             (click)="paginationDirective.setCurrent(page.value)"\n             *ngIf="paginationDirective.getCurrent() !== page.value">\n            <span class="show-for-sr">{{ screenReaderPageLabel }} </span>\n            <span>{{ page.label }}</span>\n          </a>\n          <ng-container *ngIf="paginationDirective.getCurrent() === page.value">\n            <span class="show-for-sr">{{ screenReaderCurrentLabel }} </span>\n            <span>{{ page.label }}</span>\n          </ng-container>\n        </li>\n        <li class="pagination-next" [class.disabled]="paginationDirective.isLastPage()" *ngIf="directionLinks">\n          <a tabindex="0" *ngIf="!paginationDirective.isLastPage()" (keyup.enter)="paginationDirective.next()"\n             (click)="paginationDirective.next()"\n             [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\n            {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n          </a>\n          <span *ngIf="paginationDirective.isLastPage()">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n      </ul>\n    </pagination-template>\n  </div>\n  <div class="ngx-pagination-range"\n       [class.ngx-table__table--dark-pagination-range]="config.tableLayout.theme === \'dark\'"\n       *ngIf="config.paginationRangeEnabled">\n    <div class="ngx-dropdown ngx-pagination-range-dropdown"\n         [class.ngx-active]="showRange"\n         id="rowAmount">\n      <div class="ngx-btn-group">\n        <div class="ngx-pagination-range-dropdown-button"\n             (click)="showRange = !showRange">\n          {{limit}} <i class="ngx-icon ngx-icon-arrow-down"></i>\n        </div>\n        <ul class="ngx-menu" *ngIf="showRange">\n          <li class="ngx-pagination-range-dropdown-button-item"\n              (click)="changeLimit(limit, false)"\n              *ngFor="let limit of ranges">\n            <span>{{limit}}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],e.propDecorators={paginationDirective:[{type:i.ViewChild,args:["paginationDirective"]}],pagination:[{type:i.Input}],config:[{type:i.Input}],id:[{type:i.Input}],updateRange:[{type:i.Output}]},e}(),C=function(){function e(){}return e.prototype.transform=function(e,n){if(void 0!==e)return void 0===n||0===Object.keys(n).length||""===n?e:e.filter(function(e){return-1!==JSON.stringify(Object.values(e)).toLocaleLowerCase().indexOf(n.toLocaleLowerCase())})},e.decorators=[{type:i.Pipe,args:[{name:"global"}]}],e}(),I=function(){function e(){}return e.getPath=function(e,n){return e.reduce(function(e,n){return e&&"undefined"!=typeof e[n]?e[n]:null},n)},e.decorators=[{type:i.Injectable}],e}(),k=function(){function e(){}return e.prototype.transform=function(e,n){var t=n.split(".");return I.getPath(t,e)},e.decorators=[{type:i.Pipe,args:[{name:"render"}]}],e}(),R=function(){function e(){this.filters={}}return e.prototype.transform=function(e,n,t){var o=this;if(void 0!==e)return void 0===n?e:(n.forEach(function(e){o.filters[e.key]=e.value.toString().toLocaleLowerCase(),0!==Object.keys(e).length&&""!==e.value||delete o.filters[e.key]}),t&&t.groupRows?e.map(function(e){return o.filterGroup(e)}):this.filterGroup(e))},e.prototype.filterGroup=function(e){var i=this;return e.filter(function(a){return Object.keys(i.filters).every(function(e){var n=e.split("."),t=I.getPath(n,a),o="object"==typeof t?JSON.stringify(t):t.toString().toLocaleLowerCase();return i.filters[e].split(",").some(function(e){return-1<o.indexOf(e.trim())})})})},e.decorators=[{type:i.Pipe,args:[{name:"search"}]}],e}(),P=function(){function s(){this.defaultArray=[]}return s.isNaN=function(e,n){return isNaN(parseFloat(e))||!isFinite(e)||isNaN(parseFloat(n))||!isFinite(n)},s.compare=function(e,n,t){var o=t.split("."),a=I.getPath(o,e),i=I.getPath(o,n),r=(a+"").toLowerCase(),l=(i+"").toLowerCase();return s.isNaN(a,i)?r.localeCompare(l):parseFloat(a)<parseFloat(i)?-1:parseFloat(a)>parseFloat(i)?1:0},s.prototype.transform=function(e,n,t){return 0===this.defaultArray.length&&(this.defaultArray=e),n.key&&""!==n.key?""===n.order?this.defaultArray:"asc"===n.order?this.sortAsc(t,e,n):this.sortDesc(t,e,n):e},s.prototype.sortAsc=function(e,n,t){return e&&e.groupRows?n.map(function(e){return e.sort(function(e,n){return s.compare(e,n,t.key)})}):n.sort(function(e,n){return s.compare(e,n,t.key)})},s.prototype.sortDesc=function(e,n,t){return e&&e.groupRows?n.map(function(e){return e.sort(function(e,n){return s.compare(n,e,t.key)})}):n.sort(function(e,n){return s.compare(n,e,t.key)})},s.decorators=[{type:i.Pipe,args:[{name:"sort"}]}],s}(),S=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{declarations:[b,w,x,v,R,k,C,P],imports:[t.CommonModule,r.NgxPaginationModule,n.DragDropModule],exports:[b]}]}],e}(),T=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{imports:[t.CommonModule,S],bootstrap:[b],exports:[b],providers:[]}]}],e}();e.DefaultConfig=h,e.TableModule=T,e.STYLE=g,e.THEME=u,e.Event=p,e.API=d,e.ɵc=b,e.ɵb=S,e.ɵf=w,e.ɵg=x,e.ɵh=v,e.ɵk=C,e.ɵj=k,e.ɵi=R,e.ɵl=P,e.ɵa=f,e.ɵd=m,e.ɵe=y,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-easy-table.umd.min.js.map